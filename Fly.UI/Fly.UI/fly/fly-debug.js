var sTime = new Date(); (function () { var win = window, doc = win.document, docE = doc.documentElement; function destroy(_) { if (arguments.length == 1) { if (_.destroy && _.destroy != arguments.callee) _.destroy(); else if (Array && _ instanceof Array) { arguments.callee.apply(false, _); for (var B = _.length - 1; B > -1; B--) { _[B] = null; _.pop() } } for (var A in _) { var $ = _[A]; _[A] = null; if ($ && $.destroy) $.destroy(); $ = null } } else if (arguments.length == 0) { this.destroy = null; arguments.callee.call(false, this) } else for (B = 0; B < arguments.length; B++) arguments.callee.call(false, arguments[B]); if (this != false) win.CollectGarbage && CollectGarbage() } function $(A) { var _ = null; if (this._$isWindow || this == $) { if (A && arguments.length == 1) { if (A.isIList) return A; if ($.isFun(A)) return $.onLoad(A); else if (!$.isStr(A)) return $.toArray(A) } } else _ = $.isArray(this) ? this : ($.likeArray(this) ? $.toArray(this) : [doc]); var B = (new ui.selector.DomQuery(_, arguments)).find(); return B } var config = win.flyConfig || {}; $.version = "1.1"; config.alias && (window[config.alias] = $); if (win.fly) for (var k in win.fly) $[k] = win.fly[k]; $.destroy = function () { $.destroy = null; destroy.apply($, arguments); if (arguments.length == 0) { try { destroy(Array.prototype, String.prototype, Function.prototype) } catch (_) { } window.$ == $ && (window.$ = null); window.fly = $ && (window.fly = null); docE = doc = destroy = null } }; win.fly = $; win.$ || (win.$ = fly); fly.context = { plugins: [] }; win._$isWindow = true; $.ns = function (C) { if (arguments.length > 1) { for (var B = 0; B < arguments.length; B++) $.ns(arguments[B]); return } var A = C.split("."), _ = win; for (B = 0; B < A.length; B++) _ = _[A[B]] || (_[A[B]] = { destroy: destroy }); return _ }; $.Class = function (J) { var F = J.base, H = J.beforeNew, D = J.afterNew, C = J.constructor; if (C == Object || C == null) C = $.isFun(F) ? function () { F.apply(this, arguments) } : function () { }; if ($.isFun(H) || $.isFun(D)) C = function () { if ($.isFun(H)) H.apply(this, arguments); this.constructor.apply(this, arguments); if ($.isFun(D)) D.apply(this, arguments) }; var G = $.isFun(F) ? F.prototype : ($.isObject(F) ? F : Object.prototype); function _() { } _.prototype = G; var B = C.prototype = new _(); B.$base = G; if ($.isFun(F)) for (var E in F) if (!(E in C)) C[E] = F[E]; if (J.inherit) { var A = $.isArray(J.inherit) ? J.inherit : [J.inherit]; $.each(A, function (_) { $.extendIf(B, _) }); delete J.inherit } delete J.beforeNew; delete J.afterNew; delete J.constructor; delete J.base; for (var I in J) B[I] = J[I]; C.$base = $.isFun(F) ? F : Object; B.constructor = C; return C }; $.ns("fly.data", "fly.plugins"); var lib = $.ns("fly.lib"), ui = $.ns("fly.ui"), collection = $.ns("fly.collection"), browser = $.browser || ($.browser = {}), arrP = Array.prototype, slice = arrP.slice, toStr = Object.prototype.toString, qp = null, dh, toFun, camelCase = function ($) { $ = $.replace(/\-\w/g, function ($) { return $.charAt(1).toUpperCase() }); return $.charAt(0).toLowerCase() + $.substr(1) }; with (browser) { var b = browser, ua = b.userAgent = navigator.userAgent.toLowerCase(); function c($) { return $.test(ua) } b.doc = doc; b.isStrict = doc.compatMode == "CSS1Compat"; b.isFirefox = c(/firefox/); b.isOpera = c(/opera/); b.isChrome = c(/chrome/); b.isWebKit = c(/webkit/); b.isSafari = !isChrome && c(/safari/); b.isIE = !isOpera && c(/msie/); if (b.isIE) { b.ieVersion = ua.match(/msie (\d+)/)[1]; b["isIE" + b.ieVersion] = true } b.isGecko = !isWebKit && c(/gecko/); b.isMoz = c(/mozilla/) && !b.isOpera && !b.isIE; b.diffAttrs = { styleRemoveMethod: docE.style.removeProperty ? "removeProperty" : "removeAttribute" }; b.name = isIE ? "IE" + b.ieVersion : isFirefox ? "FF" : isOpera ? "Opera" : isChrome ? "Chrome" : isSafari ? "Safari" : ""; if (b.isMoz) { win.Event.prototype.__defineGetter__("x", function () { return this.clientX + 2 }); win.Event.prototype.__defineGetter__("y", function () { return this.clientY + 2 }); var htmlProp = HTMLElement.prototype; htmlProp.__defineGetter__("innerText", function () { return this.textContent }); htmlProp.__defineSetter__("innerText", function ($) { return this.textContent = $ }); htmlProp.__defineGetter__("outerHTML", function () { var _ = this.attributes, $ = "<" + this.tagName, A = 0; for (; A < _.length; A++) if (_[A].specified) $ += " " + _[A].name + '="' + _[A].value + '"'; if (!this.canHaveChildren) return $ + " />"; return $ + ">" + this.innerHTML + "</" + this.tagName + ">" }); htmlProp.__defineSetter__("outerHTML", function (_) { var A = this.ownerDocument.createRange(); A.setStartBefore(this); var $ = A.createContextualFragment(_); this.parentNode.replaceChild($, this); return _ }); htmlProp.__defineGetter__("canHaveChildren", function () { return !/^(area|base|basefont|col|frame|hr|img|br|input|isindex|link|meta|param)$/.test(this.tagName.toLowerCase()) }) } } $.extend = function (A, _) { if (arguments === 1) return $.extend($, A); var C = $.isStr(this), D = C ? this.length : -1; for (var F = 1; F < arguments.length; F++) { var B = arguments[F]; if (B) for (var E in B) { if (E.charAt(0) === "$") continue; if (C) { if (this != "" && E.substr(0, D) != this) A[this + E] = B[E]; if (!(E in A)) A[E] = B[E] } else if (this != false || A[E] == undefined) A[E] = B[E] } } return A }; var fSetup = arguments.callee; $.extend($, { regPlugin: function (A, B) { var _ = { name: B ? A : "", fn: B || A }; _.fn($); $.context.plugins.push(_); return this }, setup: function (_, A) { _.eval("(" + fSetup + ")()"); $.context.plugins.each(function ($) { if (!A || A.test($.name)) _.eval("fly.regPlugin(" + $.fn + ")") }) }, BREAK: {}, safeExtend: function (A, B, _) { return $.extend.apply(A, slice.call(arguments, 1)) }, extendIf: function (A, _) { return $.extend.apply(false, arguments) }, foucsableTypeRegs: /(BUTTON|INPUT|OBJECT|SELECT|TEXTAREA)/, clickableTypeRegs: /^(A|AREA)$/, attrGeters: {}, attr: function (B, A, _) { var C = $.isObject(A); if (arguments.length < 3 && !C) { var E = A.toLowerCase(); if (this.isDom(B) && this.attrGeters[E]) return this.attrGeters[E](B); return B.getAttribute && !(A in B) ? B.getAttribute(A) : B[A] } if (C) for (var D in A) B.setAttribute && !(D in B) ? B.setAttribute(D, A[D]) : B[D] = A[D]; else B.setAttribute && !(A in B) ? B.setAttribute(A, _) : B[A] = _; return this }, valueGeters: { option: function ($) { return ($.attributes.value || {}).specified ? $.value : $.text }, select: function (_) { if (_.type === "select-one") return _.selectedIndex > -1 ? $.valueGeters.option(_.options[_.selectedIndex]) : null; var A = new Array; for (var B = 0; B < _.options.length; B++) if (_.options[B].selected) A.push($.valueGeters.option(_.options[B])); return A }, input: function (_) { var $ = _.type; if ($ == "radio" || $ == "checkbox") return _.value == null ? "on" : _.value; else return _.value } }, valueSeters: { select: function (D, A) { var C = D.type === "select-one", E = $.likeArray(A); for (var F = 0; F < D.options.length; F++) { var B = D.options[F], _ = $.valueGeters.option(B); if ((B.selected = _ == A || (E && $.inArray(_, A))) && C) return } } }, value: function (D, C) { if (arguments.length == 1) { var B = D.nodeName.toLowerCase(), A = $.valueGeters[B]; return A ? A(D) : A.value } else { var B = D.nodeName.toLowerCase(), A = $.valueSeters[B], _ = $.ifFun.call(D, C, D); A ? A(D, _) : (D.value = _); return this } }, is: function () { var _ = function (A, B, _) { return _ ? toStr.call(A) == "[object " + _ + "]" : (A == B || (A == null || B == null ? false : $.isFun(B) && (A instanceof B || (A.constructor == B || String(A.constructor) == String(B))))) }, A = ["Date", "Number", "Boolean", "String", "Array", "Function", "Object"]; for (var B = 0; B < A.length; B++) (function (_) { var A = "[object " + _ + "]"; $["is" + _] = function ($) { return $ != null && toStr.call($) === A } } (A[B])); $.isFun = $.isFunction; $.isStr = $.isString; return _ } (), isHtml: function () { var _ = /<[\w]+[\s\S]+>/; return function (A) { return $.isStr(A) && _.test(A) } } (), likeArray: function (_) { return _ && ($.isArray(_) || (typeof (_.length) == "number" && !$.isFun(_) && !$.isStr(_) && !_._$isWindow && (!_.nodeName || !_.ownerDocument))) }, isDom: function ($) { return $ && $.nodeType === 1 && $.ownerDocument }, toArray: function (A) { if ($.isArray(A)) return A; if (!$.likeArray(A)) return new Array(A); if ($.isFun(A.callee)) return slice.call(A, 0); var _ = new Array, B = A.length; while (--B != -1) _[B] = A[B]; return _ }, slice: function (A, _, B) { return slice.call($.toArray(A), _, B == undefined ? 100000000 : B) }, each: function (A, B, _) { if ($.likeArray(A)) for (var C = 0; C < A.length; C++) if (B.call(_ || A[C], A[C], C, A) == $.BREAK) break; else for (C in A) if (B.call(_ || A[C], A[C], C, A) == $.BREAK) break; return this }, inArray: function (A, B) { var _ = arguments, C = 1; if (arguments.length == 2 && $.likeArray(B)) _ = B, C = 0; for (; C < _.length; C++) if (_[C] == A) return new Number(C); return null }, emptyFun: function () { return this }, falseFun: function () { return false }, lambda: function (_) { return $.isFun(_) ? _ : function () { return _ } }, toFun: toFun = function () { var reg = /\b(if|for|with|while|do|switch|throw|return|var)\b/, cache = {}; function attachReturn($, _) { if (reg.test($) == false && (_ == null || reg.test(_) == false)) $ = "return " + $; return $ } return function (expression, onlyStr, format) { var isStr = $.isStr(expression); if ((onlyStr == true && isStr == false) || $.isFun(expression)) return expression; if (isStr == false && format == null) return function () { return expression }; var key = arguments.length < 4 ? expression + (onlyStr || "") + (format || "") : "", fn; if (key != "" && (fn = cache[key])) return fn; var params, ms; if ($.isStr(expression) && (ms = expression.match(/^([\s,\w$_]*)=>/))) { params = ms[1]; expression = expression.replace(/^([\s,\w$]*)=>/, ""); expression = attachReturn(expression, format); if (format) { var r = /\bfunction\s*\(([\s,\w$_]*)\)/; ms = r.exec(format); if (/^\s*$/.test(ms[1])) format = format.replace(r, " function(" + params + ")"); else { var pStrs = params.split(","); for (var i = 0; i < pStrs.length; i++) expression = "var " + pStrs[i] + "=arguments[" + i + "];" + expression } } else format = "function(" + params + "){{0}}" } else expression = attachReturn(expression, format); if (/\bas\b/.test(expression)) expression = "var as=arguments; " + expression; var args = arguments; if (format) fn = eval("____=" + format.$format(expression)); else fn = eval("____=function(x,y,z){" + expression + "}"); if (key != "") cache[key] = fn; return fn } } (), ifFun: function (_, A) { if (_ && $.isFun(_)) return arguments.length > 1 ? _.apply(this, slice.call(arguments, 1)) : _.call(this); return _ }, format: function ($, _) { return ($.$format || $.format).apply($, slice.call(arguments, 1)) }, globalEval: function (A) { if (A == null || /^\s*$/.test(A)) return; var _ = doc.getElementsByTagName("head")[0] || docE, $ = doc.createElement("script"); $.type = "text/javascript"; $.text = A; _.appendChild($, _.firstChild); _.removeChild($) } }); $.In = $.inArray; lib.CacheHelper = function () { var _ = this, A = {}; this.data = function (D, E, C) { var _ = typeof (D) == "string" ? D : $.isObject(D) || $.isFun(D) ? ui.DomHelper.getUniqueID(D) : D, B = A[_] || (A[_] = {}); if (C !== undefined) return B[E] = C; return B[E] }; this.removeData = function (B, C) { var _ = $.isObject(B) || $.isFun(B) ? ui.DomHelper.getUniqueID(B) : B; if (C == null) delete A[_]; else A[_]; delete myCache[C] }; this.queue = function (B, C, A) { C += ":queue"; var D = _.data(B, C); $.isArray(D) ? D.push(A) : _.data(B, C, [A]) }; this.dequeue = function (A, C) { C += ":queue"; var _ = this.data(A, C), B = _.shift(); if ($.isFun(B)) B.call(A) }; this.destroy = function () { _.destroy = null; for (var B in A) { for (var $ in A[B]) A[B][$] = null; A[B] = null } A = null; destroy(this); _ = null } }; lib.Cache = new lib.CacheHelper(); fly.lib.Function = $.extend({ where: function (C, D) { C = $.toFun(C, true); var A = $.isFun(C), _ = this, B = arguments.length > 1 ? slice.call(arguments, 1) : null; return function () { if (A ? C.apply(this, arguments) : C) return _.apply(this, B || arguments) } }, bind: function (_, B) { var $ = this, A = arguments.length > 1 ? slice.call(arguments, 1) : null; return function () { return $.apply(_ || win, A || arguments) } }, format: function (params) { var old = this, sendArgs = slice.call(arguments, 0), needFormat = false; for (var i = 0; i < arguments.length; i++) if ($.isStr(arguments[i]) && /^@\{([\d\*\-\,]+)\}$/.test(arguments[i])) { needFormat = true; break } if (!needFormat) return function () { return old.apply(this, sendArgs) }; return function () { var args = [].concat(sendArgs); for (var i = 0; i < args.length; i++) { var arg = args[i], ms; if ($.isStr(arg) && (ms = arg.match(/^@\{([\d\*\-\,]+)\}$/))) { var str = ms[1]; if (/^\d+$/.test(str)) args[i] = arguments[str]; else { var as; if (str.indexOf(",") > -1) as = eval("[arguments[" + str.replace(/^,|,$/g, "").replace(/,+/g, "],arguments[") + "]]"); else { var start = 0, end; if (str.indexOf("-") > -1) { var parts = str.split("-"); start = parts[0]; end = parts[1] } as = slice.call(arguments, start, (parseInt(end) + 1) || 1000) } args.splice.apply(args, [i, 1].concat(as)); i += as.length - 1 } } } return old.apply(this, args) } }, inherit: function (A, _) { return $.Class($.extend(_ || {}, { constructor: this, base: A })) }, extend: function (_) { $.extend.apply(this, [this.prototype].concat(slice.call(arguments, 0))); return this }, parse: function ($) { if ($ instanceof this) return $; return new this($) } }, lib.Function); $.safeExtend("$", Function.prototype, lib.Function); fly.lib.Date = $.extend({ format: function (_) { _ = _ || "yyyy-MM-dd HH:mm:ss"; var $ = { "y+": this.getFullYear(), "M+": this.getMonth() + 1, "d+": this.getDate(), "H+": this.getHours(), "h+": this.getHours() % 12, "m+": this.getMinutes(), "s+": this.getSeconds(), "S+": this.getMilliseconds(), "W+": fly.lib.Date.W[this.getDay()], w: fly.lib.Date.w[this.getDay()] }; for (var A in $) _ = _.replace(new RegExp(A, "g"), function (_) { return $[A].toString().padLeft(_.length, "0") }); return _ } }, lib.Date); fly.lib.Date.w = " 123456"; fly.lib.Date.W = "Sun,Mon,Tues,Wed,Thurs,Fri,Sat".split(","); $.safeExtend("$", Date.prototype, lib.Date); fly.lib.String = $.extend({ formatReg: /\{([^{}]+)\}/g, format: function (params) { var args = arguments, lastArg = arguments[arguments.length - 1]; return this.replace(this.formatReg, function ($0, $1) { var v = args[$1]; if (v == undefined && lastArg) if (/[^\w$]/.test($1)) eval("v=lastArg." + $1); else v = lastArg[$1]; if (v == undefined) return ""; while ($.isFun(v)) v = v.call(lastArg); return v }) }, contains: function ($, _, A) { return this.IndexOf($, _, A) > -1 }, IndexOf: function ($, C, D) { if ($ == null) return -1; var B = D || "", A = B ? B + this + B : this, _ = B ? B + $ + B : _; return C ? A.toUpperCase().indexOf(_.toUpperCase()) : A.indexOf(_) }, startWith: function ($, A) { if ($ == null) return false; var _ = this.substr(0, $.length); return A ? (_.toUpperCase() == $.toUpperCase()) : (_ == $) }, endWith: function ($, A) { if ($ == null) return false; var _ = this.substr(this.length - $.length); return A ? (_.toUpperCase() == $.toUpperCase()) : (_ == $) }, trim: function () { return this.replace(/(^\s+)|(\s+$)/g, "") }, trimLeft: function () { return this.replace(/^\s+/g, "") }, trimRight: function () { return this.replace(/\s+$/g, "") }, firstUpper: function () { return this.charAt(0).toUpperCase() + this.substr(1) }, repeat: function ($) { var _ = ""; while ($-- > 0) _ += this; return _ }, padLeft: function ($, _) { return (_ == null ? " " : _.toString()).$repeat($ - this.length) + this }, padRight: function ($, _) { return this + (_ == null ? " " : _.toString()).$repeat($ - this.length) }, camelCase: function (A) { var _ = this; if (A && $.isStr(A)) _ = _.replace(new RegExp("\\" + A + "\\w", "g"), function ($) { return $.charAt(1).toUpperCase() }); return _.charAt(0).toLowerCase() + _.substr(1) } }, lib.String); $.safeExtend("$", String.prototype, lib.String); fly.lib.EventManager = function () { var A = this; this.event = null; this.eventHash = {}; this.stopPropagationReturnValue = false; this.btnMap = browser.isIE ? { 1: 0, 4: 1, 2: 2} : (browser.isWebKit ? { 1: 0, 2: 1, 3: 2} : { 0: 0, 1: 1, 2: 2 }); var D = function (A) { var _ = A.indexOf("."), $ = ""; if (_ > -1) { $ = A.substr(_ + 1); A = A.substr(0, _) } return { type: $, eName: A} }, C = "type altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "), B = this.eventCls = function ($) { this.browserEvent = $; for (var _ = 0; _ < C.length; _++) this[C[_]] = $[C[_]] }; B.extend({ pageXY: function () { return { x: this.clientX + docE.scrollLeft + doc.body.scrollLeft, y: this.clientY + docE.scrollTop + doc.body.scrollTop} } }); this.setEvent = function (_) { if (_ == A.event || (_ && _.browserEvent) || _ == A.browserEvent) return _; win.$$event = $.$$event = A.browserEvent = _; var B = $.$event, C = $.$event = win.$event = A.$event = new this.eventCls(_); if (B && B != C) C.previous = B; if (_) { C.button = _.button ? this.btnMap[_.button] : (_.which ? _.which - 1 : -1); if (_.type == "click" && C.button == -1) C.button = 0; C.ctrlKey = _.ctrlKey || _.metaKey || false; C.keyCode = _.keyCode == undefined ? _.which : _.keyCode; C.target = _.srcElement || _.target } else { C.button = -1; C.shiftKey = false; C.ctrlKey = false; C.altKey = false; C.keyCode = 0; C.charCode = 0; C.target = null } return C }; this.restoreEvent = function (_) { $.$event = win.$event = A.event = _; win.$$event = $.$$event = A.browserEvent = _ ? _.browserEvent : null }; var _ = function (J, H, L, B, C) { var I = ui.DomHelper.getUniqueID(J), K = A.eventHash[I]; K || (A.eventHash[I] = K = { el: J }); var E = D(H); H = E.eName; var _ = K[H]; if (_ == null) { K[H] = _ = []; function G(_) { _ = _ || win.event; var B = A.setEvent(_); A.fire(J, H); try { A.restoreEvent(B.previous) } catch ($) { } return _.returnValue } _.root = G; if (H == "sizechange" && !browser.isIE) { var F = J.offsetWidth, M = J.offsetHeight; setInterval(function () { if (F != J.offsetWidth || M != J.offsetHeight) { F = J.offsetWidth; M = J.offsetHeight; G({ type: H }) } }, 300) } else if (J.attachEvent) J.attachEvent("on" + (H == "sizechange" ? "resize" : H), G); else if (J.addEventListener) J.addEventListener(H, G, false); else if (!(("on" + H) in J)) J["on" + H] = G } _.unshift({ fn: $.toFun(L), scope: B, args: C, type: E.type }) }; this.on = function (E, K, I, D, F) { if (arguments.length == 2 && !isObj) return this.fire(E, K); var G = $.isStr(K), B = !G && $.isObject(K), H = $.likeArray(I); B && (D = I); var C = isObj ? 3 : 4; F = arguments.length > C ? slice.call(arguments, C) : undefined; if (!$.likeArray(E) && !isObj && G && !H) { _(E, K, I, D, F); return this } function A(B, C, A) { A && (H = $.likeArray(A)); H ? $.each(I, function ($) { _(B, C, $, D, F) }) : bf(B, C, A, D, F) } function J(_) { G ? A(_, K) : B ? $.each(K, function ($, B) { A(_, B, $) }) : $.each(K, function ($) { A(_, $) }) } $.likeArray(E) ? $.each(E, J) : J(E); return this }; this.bind = this.on; this.un = function (C, K, I) { if ($.likeArray(C)) { for (var J = 0; J < C.length; J++) A.un(C[J], K, I); return C } if ($.likeArray(K)) { for (J = 0; J < K.length; J++) A.un(C, K[J], I); return C } var _ = ui.DomHelper.getUniqueID(C), G = A.eventHash[_]; if (!G) return C; function H(_, F, D, E) { if ($.likeArray(F)) { for (var I = 0; I < F.length; I++) H(_, F[I], E); return } F != null && (F = $.toFun(F)); for (I = _.length - 1; I > -1; I--) if ((F == null || _[I].fn == F) && (E === "" || E == _[I].type)) { _[I] = null; _.splice(I, 1) } if (_.length == 0) { var B = G.el, C = G[D].root; if (C) { B.detachEvent && B.detachEvent("on" + D, C); if (B.removeEventListener) { try { B.removeEventListener(D, C) } catch (A) { } } if (B["on" + D] == C) B["on" + D] = null } G[D] = null; delete G[D] } } if (K == null) { for (var F in G) if (F != "el") H(G[F], I, F, "", true); G.el = null; A.eventHash[_] = null; delete A.eventHash[_] } else { var E = D(K), B = G[E.eName]; if (!B) return C; else H(B, I, E.eName, E.type) } return this }; this.fire = function (F, L, E, G) { A.stoped = false; if ($.likeArray(F)) { for (var K = 0; K < F.length; K++) A.fire.apply(A, [F[K]].concat(slice.call(arguments, 1))); return F } if ($.likeArray(L)) { for (K = 0; K < L.length; K++) A.fire.apply(A, [F, L[K]].concat(slice.call(arguments, 2))); return F } var I = A.eventHash[ui.DomHelper.getUniqueID(F)]; if (!I) return F; var H = D(L); L = H.eName; var B = I[L]; if (!B) return F; var _, G = arguments.length > 3 ? slice.call(arguments, 3) : null; for (K = 0; K < B.length; K++) { var J = B[K]; if (H.type === "" || H.type == J.type) { _ = J.fn.apply(J.scope == null ? (E == null ? F : E) : J.scope, G || J.args || [F, A.event]); try { if (F.nodeType) { if (_ == A.stopPropagationReturnValue) { lib.Event.stop(); break } else if (A.stoped || (A.browserEvent && A.browserEvent.cancelBubble)) break } else if (_ == A.stopPropagationReturnValue) break } catch (C) { } } } return _ }; this.stop = function () { var $ = A.$event, _ = A.browserEvent; A.stoped = true; if ($) { $.cancelBubble = _.cancelBubble = true; $.returnValue = _.returnValue = false; if (_.stopPropagation) _.stopPropagation(); if (_.preventDefault) _.preventDefault() } return this == A ? this : false }; this.createEventFn = function (_, $) { _ = _.replace(/^on/i, ""); _ = _.charAt(0).toLowerCase() + _.substr(1); return function () { if (arguments.length > 0) return this.on.apply(this, [_].concat(Array.prototype.slice.call(arguments, 0))); else if ($) return $.call(this); else this.fire(_) } }; this.registEvent = function (B, C) { var A = $.isFun(B) ? B.prototype : B; this.eventAble(A); C = $.isStr(C) ? [C] : C; for (var D = 0; D < C.length; D++) { var _ = C[D]; if (A[_] == null) A[_] = this.createEventFn(_) } return this }; this.eventAble = function (B) { var _ = $.isFun(B) ? B.prototype : B; if (_.eventAble) return this; if (!_.fire) _.fire = function () { return A.fire.apply(this, [this].$addRange(arguments)) }; if (!_.on) _.on = function () { return A.on.apply(this, [this].$addRange(arguments)) }; if (!_.un) _.un = function () { A.un.apply(this, [this].$addRange(arguments)); return this }; return this }; this.destroy = function () { A.destroy = null; for (var $ in A.eventHash) A.un(A.eventHash[$].el); destroy(A); A = null } } .$inherit(lib.EventManager); fly.Event = fly.lib.Event = new lib.EventManager(); $.onLoad = function (C, _, B) { if (doc.readyState == "complete" || doc.readyState == "loaded") { var A = slice.call(arguments, 2); setTimeout(function () { if ($.likeArray(C)) $.each(C, function () { return this.apply(_, A) }); else C.apply(_, A) }) } else $.Event.on.apply($.Event, [win, "load"].concat(arguments)); return this }; $.ready = function (B, _, A) { if (doc.readyState == "complete") return $.onLoad.call(this, arguments); $.initReady(); $.doc.on.apply($.doc, ["_readycomplete"].concat(arguments)) }; $.initReady = function () { if ($.initReady.invoked) return; $.initReady.invoked = true; var C = browser.isIE ? "readystatechange" : "DOMContentLoaded", _ = false, A = 0, B = function () { if (_) return; _ = true; clearInterval(A); $.doc.un(C); $.doc.fire("_readycomplete"); $.doc.un("_readycomplete") }; $.doc.on(C, function () { if ((/loaded|complete/).test(document.readyState)) B() }); if (browser.isIE) A = setInterval(function () { try { docE.doScroll("left"); B() } catch ($) { } }, 10) }; $.onUnload = function (_) { $.Event.on(win, "unload", arguments); return $ }; $.onBeforeUnload = function (_) { $.Event.on(win, "beforeunload", arguments); return $ }; fly.lib.JsonUtils = function () { var C = this, F = !!{}.hasOwnProperty, D = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, E = function ($) { return $ === 0 || $ == null || $ > 0 }, A = function ($, _) { $ = encodeURIComponent($); if (/["\\\x00-\x1f]/.test($)) return '"' + $.replace(/([\x00-\x1f\\"])/g, function (A, $) { var _ = D[$]; if (_) return _; _ = $.charCodeAt(); return "\\u00" + Math.floor(_ / 16).toString(16) + (_ % 16).toString(16) }) + '"'; if (E(_)) return '"' + $ + '"'; else return $ }, H = this.encodeArray = function (C, F) { var B = ["["], A, E, D = C.length, _; for (E = 0; E < D; E += 1) { _ = C[E]; switch (typeof _) { case "undefined": case "function": case "unknown": break; default: if (A) B.push(","); B.push(_ === null ? "null" : $.Json.encode(_, F)); A = true } } B.push("]"); return B.join("") }; this.encodeDate = function (_, A) { var $ = _.$format("yyyy-MM-dd hh:mm:ss"); return E(A) ? '"' + $ + '"' : $ }; this.encode = function (G, J) { var D = $.isNumber(J) ? J + 1 : J; if (G == null) return "null"; G = $.likeArray(G) ? H(G, D) : $.isDate(G) ? $.Json.encodeDate(G, J) : $.isStr(G) ? A(G, J) : $.isNumber(G) || $.isBoolean(G) ? String(G) : null; if (G != null) return G; else { var E = ["{"], B, I, _; for (I in G) if (!F || (G.hasOwnProperty && G.hasOwnProperty(I))) { _ = G[I]; switch (typeof _) { case "undefined": case "function": case "unknown": break; default: if (B) E.push(","); E.push(C.encode(I), ":", _ === null ? "null" : this.encode(_, D)); B = true } } E.push("}"); return E.join("") } }; this.decode = function (A) { var B = A; try { if ($.isStr(A)) return win.eval("(" + A + ")"); return A } catch (_) { if (B == "") return ""; win.eval(B) } }, this.urlEncode = function (E, _, F, G) { var D = !!G; G = G || []; var A = $.likeArray(E), F = F || ""; if (!$.likeArray(E) && !$.isObject(E)) { var B = C.encode(E, -1); if (D) G.push("&", F, "=", B); return B } $.each(E, function (B, I) { var E = A && !D ? B.value : B, H = F + encodeURIComponent(A ? (!D ? B.name || B.id : "") : I); if (_ != false) if ($.likeArray(E)) return $.each(E, function () { C.urlEncode(this, _, H, G) }); else if ($.isObject(E)) return $.each(E, function ($, A) { C.urlEncode($, _, H + "." + encodeURIComponent(A), G) }); G.push("&", H, "=", C.encode(E, -1)) }); if (D) return; if (G.length) G.shift(); return G.join("") }, this.urlDecode = function (C, E) { if (!C) return {}; var D = {}, F, H, _, A, G, B; $.each(C.split("&"), function () { F = this.split("="); H = decodeURIComponent(F[0]); G = D; B = H.split("."); while (B.length > 1) { H = B.shift(); G = G[H] = G[H] == null ? {} : G[H] } H = B[0]; _ = F[1]; if (E || !G[H]) G[H] = _; else if ($.isArray(A = G[H])) A[A.length] = _; else G[H] = [A, _] }); return D }; this.each = function ($, _, A) { return qp.each.apply($, slice.call(arguments, 1)) }; this.map = function ($, A, _) { return qp.select.apply($, slice.call(arguments, 1)) }; var B = {}, G = {}, _ = /^[\w\$]+$/; this.getAccessor = function (A) { if ($.isFun(A)) return A; if (B[A]) return B[A]; if ($.isStr(A)) return B[A] = _.test(A) ? function ($) { return $[A] } : new Function("__o", "with(__o){return " + A + "}"); else if ($.isNumber(A)) return function ($) { return $[A] }; else return function () { return A } }; this.setAccessor = function (A) { if ($.isFun(A)) return A; if (G[A]) return G[A]; if ($.isStr(A)) return G[A] = _.test(A) ? function (_, $) { _[A] = $ } : new Function("__o", "with(__o,__v){" + A + "=__v}"); else return G[A] = function (_, $) { _[A] = $ } }; this.destroy = destroy } .$inherit(lib.JsonUtils); fly.Json = fly.lib.Json = new lib.JsonUtils(); var ajax = fly.lib.ajax = fly.ajax = function (A) { var _ = new ajax.Helper(A); if (arguments.length > 0 && $.is(this, lib.ajax) === false && _.autoLoad != false) return _.go(); return _ }; ajax.Option = { url: location.href, type: "GET", dataType: "", async: true, parameterName: "par_{0}", dataType: undefined, dataFilter: undefined, contentType: "application/x-www-form-urlencoded", charset: "GB2312", username: undefined, password: undefined, timeout: -1, data: undefined }; ajax.Helper = function (_) { this.option = $.extend({}, ajax.Option); this.setup(_) }; ajax.Accepts = { xml: "application/xml, text/xml", html: "text/html", script: "text/javascript, application/javascript", json: "application/json, text/javascript", text: "text/plain", _default: "*/*" }; ajax.Eevents = ["onStart", "onError", "onSuccess", "onComplete", "onSend", "onStop", "onReadystatechange"]; lib.Event.registEvent(ajax.Helper, ajax.Eevents); ajax.Helper.$extend({ option: null, setup: function (B) { if (B) { for (var C = 0; C < ajax.Eevents.length; C++) { var _ = ajax.Eevents[C], A = _.charAt(2).toLowerCase() + _.substr(3); B[_] && this[_](B[_]); B[A] && this[_](B[A]) } $.extend(this.option, B) } return this }, get: function () { this.option.type = "GET"; return this.go.apply(this, arguments) }, post: function () { this.option.type = "POST"; return this.go.apply(this, arguments) }, go: function (H, D, C) { var E = this.option; if (arguments.length > 0) { this.url(H); if ($.isFun(D)) if ($.isFun(C)) D = D.call(this); else { C = D; D = undefined } if (C) this.onSuccess(C); if (D) this.data(D) } H = E.url.replace(/#.*$/, ""); if (this.fire("start") === false) return this; this.parseSendData(); var F = E.type.toUpperCase() == "GET"; if (F) { if (E.dataEncode !== "") H += (H.indexOf("?") > -1 ? "&" : "?") + E.dataEncode; if (E.dataType === "script") return this.loadScript(H) } this.createConnecion(); var _ = this.connection; E.username != undefined ? _.open(E.type, H, E.async, E.username, E.password) : _.open(E.type, H, E.async); _.setRequestHeader("Content-Type", E.contentType); _.setRequestHeader("Charset", E.charset); if (!F) _.setRequestHeader("Content-Length", E.dataEncode.length); _.setRequestHeader("X-Requested-With", "XMLHttpRequest"); _.setRequestHeader("Accept", E.dataType && ajax.Accepts[E.dataType] ? ajax.Accepts[E.dataType] + ", */*" : ajax.Accepts._default); var A = this.createContext(); _.onreadystatechange = A.stateChange; if (this.fire("send", this, _, E) === false) return this; if (E.timeout > 0) var B = new Date(), G = setInterval(function () { if (A.isComplete) clearInterval(G); else if ((new Date() - B) >= E.timeout) { clearInterval(G); A.isTimeout = "timeout"; A.conn.abort() } }, 60); _.send(F ? null : E.dataEncode); if (!E.async) { A.stateChange(); return this.getContent() } return this }, createContext: function () { var A = { conn: this.connection, option: this.option, data: undefined, errMsg: undefined }, B = this, _ = A; _.complete = function () { B.fire("complete", this, _.conn, _.data, _.option.status); B.fire("stop", this, _.conn, _.option) }; _.stateChange = function () { B.fire("readystatechange", this, _.conn); if (!_.conn || _.conn.readyState === 0 || _.isTimeout === "abort") { if (!A.isComplete) _.complete(); _.isComplete = true; if (_.conn) _.conn.onreadystatechange = $.emptyFun } if (!_.isComplete && _.conn && (_.conn.readyState === 4 || _.isTimeout == "timeout")) { A.isComplete = true; _.conn.onreadystatechange = $.emptyFun; _.option.status = _.isTimeout === "timeout" ? "timeout" : !ajax.isSuccess(_.conn) ? "error" : "success"; if (_.option.status === "success") { try { _.data = B.getContent() } catch (C) { _.option.status = "parsererror"; errMsg = C } } if (_.option.status === "success" || _.option.status === "notmodified") B.fire("success", B, _.data, _.option.status, _.conn); else B.fire("error", B, _.conn, _.option.status, _.errMsg); _.complete() } }; return _ }, loadScript: function (C) { var A = doc.getElementsByTagName("head")[0] || docE, _ = doc.createElement("script"); _.src = C; var B = this.option; if (B.charset) _.charset = B.charset; var $ = false; _.onload = _.onreadystatechange = function () { this.fire("readystatechange", this, _); if (!$ && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) { $ = true; this.fire("success", me, _); this.fire("complete", me, _, "success"); _.onload = _.onreadystatechange = null; if (_.parentNode) _.parentNode.removeChild(_) } }; A.appendChild(_); return undefined }, getContent: function () { var _ = this.connection, D = this.option, A = D.dataType || _.getResponseHeader("content-type") || "", C = /xml/i.test(A), B = C ? _.responseXML : _.responseText; if (C && B && B.documentElement && B.documentElement.nodeName === "parsererror") throw (D.status = "parsererror"); if (D.dataFilter) B = D.dataFilter.call(this, B, D.dataType); if (typeof B === "string") if (/json/i.test(A)) B = lib.Json.decode(B); else if (/script/i.test(A)) $.globalEval(B); return B }, createConnecion: function () { if (win.XMLHttpRequest && (win.location.protocol !== "file:" || !win.ActiveXObject)) this.connection = new XMLHttpRequest(); else if (win.ActiveXObject) { try { this.connection = new ActiveXObject("Msxml2.XMLHTTP") } catch ($) { this.connection = new ActiveXObject("Microsoft.XMLHTTP") } } }, parseSendData: function () { var _ = this.option.data; if (_ == null) return this.option.dataEncode = ""; var D = this.option.jsonEncode ? "encode" : "urlEncode", B = []; if ($.isObject(_)) for (var A in _) B.push(escape(A) + "=" + escape($.Json[D](_[A]))); else if ($.likeArray(_)) for (var C = 0; C < _.length; C++) B.push(escape(this.option.parameterName.$format(C)) + "=" + escape($.Json[D](_[C]))); return this.option.dataEncode = B.join("&") }, destroy: function () { this.destroy = null; destroy(this.option); destroy(this) } }); ajax.isSuccess = function (_) { try { var A = _.status; return !A && location.protocol === "file:" || (A >= 200 && A < 300) || A === 304 || A === 1223 || A === 0 } catch ($) { } return false }; $.each(ajax.Option, function (_, A) { ajax.Helper.prototype[A] = function ($) { this.option[A] = $; return this }; ajax[A] = function (B) { var _ = $.is(this, ajax.Helper) ? this : new ajax.Helper(); _[A].apply(_, arguments); return _ } }); $.each(ajax.Eevents, function (_) { ajax[_] = function (B) { var A = $.is(this, ajax.Helper) ? this : new ajax.Helper(); A[_].apply(A, arguments); return A } }); $.post = ajax.post = function () { var $ = new ajax.Helper(); return $.post.apply($, arguments) }; ajax.get = function () { var $ = new ajax.Helper(); return $.get.apply($, arguments) }; ajax.destroy = destroy; fly.lib.Cookie = fly.Cookie = $.extend({ set: function (_, D, $, C, B, A) { C = C == null ? "/" : C; doc.cookie = _ + "=" + escape(D) + (($ == null) ? "" : ("; expires=" + $.toGMTString())) + ((C == null) ? "" : ("; path=" + C)) + ((B == null) ? "" : ("; domain=" + B)) + ((A == true) ? "; secure" : ""); return lib.Cookie }, get: function (B, A) { var $ = doc.cookie; if (A != null) { var _ = $.search(new RegExp(B + "=", "gi")); if (_ < 0) return; $ = doc.cookie.substr(_ + B.length + 1).replace(/;.*/g, "") } else A = B; _ = $.search(new RegExp(A + "=", "gi")); if (_ < 0) return; $ = $.substr(_ + A.length + 1).replace(/&.*/g, ""); return unescape($) }, remove: function ($) { if (Cookies.get($)) doc.cookie = $ + "=" + "; expires=Thu, 01-Jan-70 00:00:01 GMT"; return lib.Cookie } }, lib.Cookie); fly.ui.StyleUtils = function () { var A = this; this.loadCss = function (_) { var $ = doc.createElement("link"); $.rel = "stylesheet"; $.type = "text/css"; $.href = _; (doc.getElementsByTagName("head")[0] || docE).appendChild($); return $ }; this.defaultSheet = function () { return A.sheet || (A.sheet = A.createStyleSheet()) }; this.createStyleSheet = function (A) { var _; if (doc.createStyleSheet) { (_ = doc.createStyleSheet()).cssText = A; _.cssRules = _.rules } else { _ = doc.createElement("style"); _.type = "text/css"; try { _.innerHTML = A || "" } catch ($) { } (doc.getElementsByTagName("head")[0] || docE).appendChild(_); _ = _.sheet; _.rules = _.cssRules } return _ }; this.createCssRule = function (B, _, A) { try { B.addRule(_, A || " ") } catch ($) { B.insertRule("" + _ + " { " + A + " }", B.cssRules.length) } return B.rules[B.rules.length - 1] }; this.currentStyle = function ($) { return $.currentStyle || doc.defaultView.getComputedStyle($, null) }; this.checkValue = function ($, _) { if ((_ || _ === 0) && /width|height|top|left|right|bottom|margin|padding/i.test($)) { _ = _.toString(); if (_.indexOf("px") < 0 && _.indexOf("%") < 0) _ = _.replace(/[\d.]+/g, function ($) { return $ + "px" }) } return _ }; this.get = function (C, D) { var B = camelCase(D); if (A.setters[B]) return A.getters[B](C, D); var _ = A.currentStyle(C), $ = _[B] || _[D]; if (!$ || $ == "auto" || /%$/.test($)) $ = D == "width" ? C.offsetWidth : D == "height" ? C.offsetHeight : D == "left" ? C.offsetLeft : D == "top" ? C.offsetTop : $; return $ }; this.num = function ($, _) { return Number((A.get($, _) + " ").replace(/[^\d-\.]/g, "")) || 0 }; this.set = function (B, C, D) { var _ = camelCase(C); if (A.setters[_]) A.setters[_](B, C, D); else if (D == null) B.style[$.diffAttrs.styleRemoveMethod](_); else B.style[_] = A.checkValue(_, D); return A }; this.getters = { opacity: function (_, B) { var $ = A.currentStyle(_), C = 100; (_.style.filter || "").replace(/alpha\([^)]*(\d+)[^)]*\)/, function (_, $) { C = parseInt($) }); return isNaN(C) ? 100 : C } }; this.setters = { opacity: function ($, _, A) { A = parseInt(A); $.style.filter = ($.style.filter || "").replace(/alpha\([^)]*\)/, "") + (isNaN(A) || isNaN == 100 ? "" : "alpha(opacity=" + A + ")") } }; if (browser.isFirefox || browser.isOpera) { var _ = "backgroundPosition"; this.getters.backgroundPositionX = function ($, B, C) { return A.get($, _).replace(/\s+.+$/, "") }; this.getters.backgroundPositionY = function ($, B, C) { return A.get($, _).replace(/^.+\s+/, "") }; this.setters.backgroundPositionX = function ($, B, C) { A.set($, _, C + " " + A.get($, _ + "Y")) }; this.setters.backgroundPositionY = function ($, B, C) { A.set($, _, A.get($, _ + "X") + " " + C) } } } .inherit(ui.StyleUtils); fly.Style = fly.ui.Style = new ui.StyleUtils(); var styleHelper = fly.ui.Style; fly.ui.DomUtils = function () { var J = "afterbegin", C = "afterend", I = "beforebegin", K = "beforeend", D = /<([\w:]+)/, B = /^<(\w+)\s*\/?>(?:<\/\1>)?$/, _ = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area: [1, "<map>", "</map>"], _default: [0, "", ""] }; _.optgroup = _.option; _.tbody = _.tfoot = _.colgroup = _.caption = _.thead; _.th = _.td; var H = this; H.uniqueNumber = 1; var G = doc.createElement("div"), A = this.getDom = function ($) { return $.dom || $.single || ($.$isElement ? $[0] : $) }, E = this.getOuter = function ($) { while ($.getOuter) $ = $.getOuter(); while ($.outer && $.outer != $) $ = $.outer; return A($) }, F = this.getInner = function ($) { while ($.getInner) $ = $.getInner(); while ($.inner && $.inner != $) $ = $.inner; return A($) }; this.getUniqueID = function ($) { $ = $ == doc ? docE : $; return $.uniqueNumber != undefined ? $.uniqueNumber : ($.uniqueNumber = "$" + H.uniqueNumber++) }; this.create = function (H) { if (H === "" || H == null) return; if (!$.isStr(H)) if (!$.isStr(H = $.ifFun(H))) return H; var E = B.exec(H); if (E) return new Array(doc.createElement(E[1])); else if (!$.isHtml(H)) return new Array(document.createTextNode(H)); var C, F = G, E = D.exec(H); if (E && (C = _[E[1].toLowerCase()])) { F.innerHTML = C[1] + H + C[2]; var I = 0; while (I++ < C[0]) F = F.firstChild } else F.innerHTML = H; var A = F.childNodes.length > 1 ? $.toArray(F.childNodes) : new Array(F.childNodes[0]); for (I = F.childNodes.length - 1; I > -1; I--) F.removeChild(F.childNodes[I]); return A }; this.doInsert = function (N, L, B, A) { var D; if ($.likeArray(L)) { for (var M = 0; M < L.length; M++) D = arguments.callee(N, L[M], B, A); return D } if ($.likeArray(B)) { for (M = 0; M < B.length; M++) D = arguments.callee(N, L, B[M], A); return D } var G = F(L); B = E(B); var _ = $.isStr(B); if (G.insertAdjacentElement) { var C = false; if (!_ && B.nodeName == "#text") if (N == K) { G.appendChild(B); C = true } else if (N == J) { G.insertBefore(B); C = true } else { _ = true; B = B.nodeValue } if (C) D = B; else D = G[_ ? "insertAdjacentHTML" : "insertAdjacentElement"](N, B) } else { B = D = _ ? H.create(B) : B; if ($.likeArray(B)) { D = []; $.each(B, function ($) { D.push(H.doInsert(N, G, $)) }) } else { N = N.toLowerCase(); N == I ? G.parentNode.insertBefore(B, G) : N == J ? G[G.firstChild ? "insertBefore" : "appendChild"](B, G.firstChild) : N == K ? G.appendChild(B) : G.nextSibling ? G.parentNode.insertBefore(B, G.nextSibling) : G.parentNode.appendChild(B) } } return A == true ? D : $(D) }; this.insertBefore = function (_, A, $) { return H.doInsert(I, _, A, $) }; this.insertAfter = function (_, A, $) { return H.doInsert(C, _, A, $) }; this.insertFirst = function (_, A, $) { return H.doInsert(J, _, A, $) }; this.append = function (_, A, $) { return H.doInsert(K, _, A, $) }; this.children = function (_) { if (_.children || (_ == doc ? (_ = docE).children : false)) return _.children; return $.toArray(_.childNodes).where("o=>o.nodeType==1") }; this.moveContent = function (A, $) { var _; while (_ = A.childNodes[0]) $.appendChild(_); return A }; this.empty = function ($) { if ($) { var _; while (_ = $.childNodes[0]) $.removeChild(_) } }; this.changeClass = function (B, D, E) { if (B.isIList) { $.each(B, function ($) { dh.changeClass($, D, E) }); return } var C = typeof (B) == "string", _ = C ? B : B.className, A = D ? this.removeClass(_, D) : _; A = E ? this.addClass(A, E) : A; !C && A != _ && (B.className = A); return A }; this.addClass = function (B, D) { if (B.isIList) { $.each(B, function ($) { dh.addClass($, D) }); return } var C = typeof (B) == "string"; if (!C && B.className == undefined) return D; var _ = (C ? B : B.className).replace(/^ +| +$/g, ""); if (_ == "") { C || (B.className = D); return D } var A = " " + _ + " "; D.replace(/\S+/g, function ($) { if (A.indexOf(" " + $ + " ") < 0) A += " " + $ }); A = A.replace(/ +/g, " ").replace(/^ +| +$/g, ""); !C && A != _ && (B.className = A); return A }; this.removeClass = function (B, D) { if (B.isIList) { $.each(B, function ($) { dh.removeClass($, D) }); return this } var C = typeof (B) == "string"; if (!C && B.className == undefined) return D; var _ = (C ? B : B.className).replace(/^ +| +$/g, ""); if (_ == "") return ""; var A = " " + _.replace(/\s/g, "  ") + " "; D.replace(/\S+/g, function ($) { A = A.replace(new RegExp("\\s" + $ + "\\s", "g"), " ") }); A = A.replace(/ +/g, " ").replace(/^ +| +$/g, ""); !C && A != _ && (B.className = A); return A }; this.hasClass = function ($, _) { if (arguments.length == 1) _ = $, $ = this; $.isIList && ($ = $.item(0)); return $ && $.className.contains(_, false, " ") }; this.clone = function (_) { if (_.isIList) { var A = $.create(); _.each(function () { A.push(this.cloneNode(true)) }); return A } return _.cloneNode() }; this.toHtml = function ($) { if ($.isIList) return $.select(H.toHtml).join(""); return $.outerHTML }; if (doc.compareDocumentPosition) this.contains = function (_, $) { return !!(_.compareDocumentPosition($) & 16) }; else this.contains = function (_, $) { return _ !== $ && (_.contains ? _.contains($) : true) }; this.focusable = function (A) { var _ = A; if (_.disabled) return false; var C = _.nodeName, B = H.tabIndex(_); if (!isNaN(B) || $.foucsableTypeRegs.test(C) || ($.clickableTypeRegs.test(C) && _.href)) if ([A]["AREA" == C ? "parents" : "closest"](":hidden").length == 0) return true; return false }; this.tabbable = function ($) { var _ = H.tabIndex($); return (isNaN(_) || _ >= 0) && H.focusable($) }; this.isVisible = function ($) { return styleHelper.get($, "visibility") !== "hidden" }; this.isDisplay = function ($) { return styleHelper.get($, "display") !== "none" }; this.isHidden = function ($) { return ($.nodeName === "INPUT" && $.type === "hidden") || !H.isDisplay($) || !H.isVisible($) }; this.tabIndex = $.attrGeters.tabindex = function (A) { var _ = A.getAttributeNode("tabindex"); if (_ != null && _.specified) return _.value; return $.foucsableTypeRegs.test(A.nodeName) || ($.clickableTypeRegs.test(A.nodeName) && A.href) ? 0 : undefined }; this.unSelection = function () { try { if (document.selection) document.selection.empty(); else win.getSelection().removeAllRanges() } catch ($) { } } } .inherit(ui.DomUtils); fly.DomHelper = fly.ui.DomHelper = new ui.DomUtils(); dh = fly.ui.DomHelper; fly.collection.IList = fly.fn = qp = { allTypes: [], extend: function (A, _) { $.isStr(A) || (A = { name: _ }); $.extend(this, A); if (this == qp) $.each(qp.allTypes, function (_) { $.extend(_.prototype || _, A) }); return this }, applyTo: function (A, _) { if (this == qp) qp.allTypes.push(A); $.safeExtend("$", A.prototype || A, this); for (var B = 1; B < arguments.length; B++) $.extend(A.prototype || A, arguments[B]); A.prototype.$type = A; return this }, $type: null, $create: function ($) { return new this.$type($) }, isIList: true, getItems: function (_) { if (arguments.length == 1) { _.getItems && (_ = _.getItems()); return $.toArray(_) } return this.items || this }, updateLength: function () { this.items && (this.length = this.items.length); return this }, item: function ($) { return this.getItems()[$] }, selectMany: function (A, $, _) { this._select.__collect = function ($, _) { _ && $.merge(_) }; return this._select.apply(this, arguments) }, selectNotNull: function (A, $, _) { this._select.__collect = function ($, _) { _ && $.push(_) }; return this._select.apply(this, arguments) }, select: function (A, $, _) { this._select.__collect = function ($, _) { $.push(_) }; return this._select.apply(this, arguments) }, _select: function (S, E, N) { var C = arguments.callee.__collect, R = [], V = this.getItems ? this.getItems() : this, T = $.toFun(S, true), F = $.isFun(T), L = arguments, U = L.length > 2; if (L.length > 11) var I = arrP.slice.call(L, 2); else if (U) var H = L[2], G = L[3], D = L[4], B = L[5], A = L[6], _ = L[7], Q = L[8], O = L[9], K = L[10]; if ($.likeArray(V)) for (var P = 0, M = V.length; P < M; P++) { var J = V[P]; C(R, F ? (U ? (I != null ? T.apply(E || J, [J, P, V].concat(I)) : T.call(E || J, J, P, V, H, G, D, B, A, _, Q, O, K)) : T.call(E || J, J, P, V)) : T) } else for (P in V) { J = V[P]; C(R, F ? (U ? (I != null ? T.apply(E || J, [J, P, V].concat(I)) : T.call(E || J, J, P, V, H, G, D, B, A, _, Q, O, K)) : T.call(E || J, J, P, V)) : T) } return this.create ? this.create(R) : R }, take: function ($, B, _, A) { this.___count = $; this.___isAsc = B; return (this.___take || qp.___take).apply(this, arrP.slice.call(arguments, 2)) }, ___take: function (H, U) { var X = [], N = this.getItems ? this.getItems() : this; if (N.length > 0) { var P = this.___count; P = P < 0 ? this.length + P : P; var Q = this.___isAsc, V = this.___isNot == true, S = arguments, K = S.length > 1; if (S.length > 11) var G = arrP.slice.call(S, 1); else if (K) var F = S[1], E = S[2], D = S[3], C = S[4], B = S[5], A = S[6], _ = S[7], J = S[8], I = S[9], T = S[10]; var L = $.toFun(H, true); if (L === undefined) L = true; var O = $.isFun(L), Y = Q != false ? 1 : -1; for (var W = (Q != false ? 0 : N.length - 1), M = (Q != false ? N.length : -1); W != M && (P == null || X.length < P); W += Y) { var R = N[W]; if (V ^ !!(O ? (K ? (G != null ? L.apply(R, [R, W, N].concat(G)) : L.call(R, R, W, N, F, E, D, C, B, A, _, J, I, T)) : L.call(R, R, W, N)) : L)) X.push(R) } } delete this.___count; delete this.___isAsc; delete this.___isNot; return this.create ? this.create(X) : X }, each: function (O, D, K) { var P = $.toFun(O, true); if (!$.isFun(P)) return this; var J = arguments, Q = J.length > 1; if (J.length > 11) var H = arrP.slice.call(J, 2); else if (Q) var G = J[2], F = J[3], E = J[4], B = J[5], A = J[6], _ = J[7], N = J[8], L = J[9], I = J[10]; var R = this.getItems ? this.getItems() : this; function C($, C) { return !Q ? P.call(D || $, $, C, R) : H != null ? P.apply(D || $, [$, C, R].concat(H)) : P.call(D || $, $, C, R, G, F, E, B, A, _, N, L, I) } if ($.likeArray(R)) for (var M = 0; M < R.length; M++) if (C(R[M], M) == $.BREAK) break; else for (M in R) if (C(R[M], M) == $.BREAK) break; return this }, uniquelize: function ($) { var _ = []; this.$each(function (A) { _.contains(A, $) || _.push(A) }); return this.create ? this.create(_) : _ }, notIn: function (_, $) { return this.where(function (A) { return _.indexOf(A, 0, $) < 0 }) }, intersect: function (_, $) { return this.where(function (A) { return _.indexOf(A, 0, $) > -1 }) }, toJson: function (C, B) { var _ = {}; C = $.toFun(C, true); B = $.toFun(B, true); if (C == null && B == null) { var A = this.getItems(); arrP.push.apply({}, A); return _ } this.$each(function (D, G, F) { var A, E = C == null ? G : C.call(D, D, G, F); if (E == $.BREAK || (A = B == null ? D : B.call(D, D, G, F) == $.BREAK)) return $.BREAK; _[E] = A }); return _ }, on: function (_, B, A) { $.Event.on.apply($.Event, [this.getItems()].merge(arguments)); return this }, un: function (_, A) { $.Event.un.apply($.Event, [this.getItems()].merge(arguments)); return this }, fire: function (_, A) { $.Event.fire.apply($.Event, [this.getItems()].merge(arguments)); return this }, add: function ($) { return this.addRange($) }, addRange: function (_) { var A = this.getItems(); arrP.push.apply(A, $.likeArray(_) ? $.toArray(_) : arguments); this.updateLength(); return this }, insert: function (_, A) { if (arguments.length > 1) { var B = this.getItems(); arrP.splice.apply(B, [_ < 0 ? B.length + _ : _, 0].concat($.likeArray(A) ? $.toArray(A) : arrP.slice.call(arguments, 1))); this.updateLength() } return this }, remove: function (_, A) { if (arguments.length > 0) { if ($.likeArray(_)) { var D = $.toArray(_).uniquelize(); D.sort(); for (var C = D.length - 1; C > -1; C--) this.remove(D[C]) } else { var B = this.getItems(); _ = _ < 0 ? B.length + _ : _; B[_] = null; arguments.length > 1 ? arrP.splice.apply(B, [_, 1].concat(A)) : arrP.splice.call(B, _, 1) } this.updateLength(); return this } else this.$each(function ($) { if ($ && $.parentNode) $.parentNode.removeChild($) }); return this }, indexOf: function (C, A, D, _) { var E = this.getItems ? this.getItems() : this, B = _ ? $.toFun(_) : null; A = D || 0; D = D || E.length - 1; for (var F = A; F <= D; F++) if (B == null ? E[F] == C : B.call(E[F], E[F], C, E)) return F; return -1 }, lastIndexOf: function (C, A, D, _) { var E = this.getItems ? this.getItems() : this, B = _ ? $.toFun(_) : null; A = D || 0; D = D || E.length - 1; for (var F = D; F >= A; F--) if (B == null ? E[F] == C : B.call(E[F], E[F], C, E)) return F; return -1 }, contains: function (A, _, $) { return this.indexOf(A, _, $) > -1 }, copyTo: function ($, _) { arrP.splice.apply(_ || (_ = []), [$, 0].concat(this.getItems())); return _ }, copy: function (_, A) { var $ = arrP.slice.apply(this.getItems(), [_ || 0, A == null ? this.length : A]); return this.create ? this.create($) : $ }, merge: function ($) { var _ = this.getItems(); for (var A = 0; A < arguments.length; A++) arrP.push.apply(_, qp.getItems(arguments[A])); return this }, css: function (_, A) { if (this.length == 0) return this; if (arguments.length == 1 && $.isStr(_)) return styleHelper.get(this.item(0), _); if (arguments.length > 1) this.$each(function ($) { styleHelper.set($, _, A) }); else this.$each(function (A) { for (var $ in _) styleHelper.set(A, $, _[$]) }); return this }, numCss: function (_) { var $ = Number((this.css(_) + " ").replace(/[^\d-\.]/g, "")); return isNaN($) ? $ : 0 }, data: function (_, A) { if (arguments.length == 1 && $.isStr(_)) return this.length == 0 ? null : this.item(0)[_]; if (arguments.length > 1) this.$each(function ($) { this[_] = A }); else this.$each(function (A) { for (var $ in _) A[$] = _[$] }); return this }, attr: function (_, A) { if (arguments.length == 1 && $.isStr(_)) return this.length == 0 ? null : $.attr(this.item(0), _); if (arguments.length > 1) this.$each(function (B) { $.attr(B, _, A) }); else this.$each(function (B) { for (var A in _) $.attr(B, A, _[A]) }); return this }, removeAttr: function ($) { this.each(function () { if (this.removeAttribute) { try { this.removeAttribute($) } catch (_) { } } try { delete this[$] } catch (_) { } }); return this }, values: function (_, D) { var B = this.filter(":input").merge(this.find(":input")); if (_ && !$.isBoolean(_)) { B.each(function (A) { var B = this.name || this.id; if (B in _) $.value(A, _[B]) }); return this } else { var C = {}, A; $.isBoolean(_) && (D = _); B.each(function () { var E = this.name || this.id, B = this.type; if (!E || (D != false && this.disabled) || /file|undefined|reset|button/i.test(B)) return; if ((/radio|checkbox/i.test(B) && !this.checked) || (B == "submit" && A)) return; A = A || B == "submit"; var _ = $.value(this); E in C ? ($.isArray(C[E]) ? C[E].push(_) : C[E] = [C[E], _]) : C[E] = _ }); return C } }, value: function (_) { if (arguments.length == 0) { var A = this.getItems()[0]; return A ? $.value(A) : null } this.each(function (A, B) { $.value(this, _); return this }) }, serialize: function () { return lib.Json.urlEncode(this.values()) }, hasChild: function (_) { _ = $(_); return this.first(function ($) { return _.first(function (_) { return !ui.DomHelper.contains($, _) }).length != 0 }).length == 0 }, hasParent: function (_) { return $(_).isChild(this) }, changeClass: function ($, _) { dh.changeClass(this, $, _); return this }, addClass: function ($) { dh.addClass(this, $); return this }, removeClass: function ($) { dh.removeClass(this, $); return this }, hasClass: function (_) { var $ = this.item(0); if ($) return dh.hasClass($, _); return false }, toHtml: function () { return dh.toHtml(this) }, clone: function () { return dh.clone(this) }, rect: function () { var A = this.item(0), _ = { top: A.offsetTop, left: A.offsetLeft, width: A.offsetWidth, height: A.offsetHeight }, $ = A.getBoundingClientRect ? A.getBoundingClientRect() : (A.getClientRects ? A.getClientRects() : null); if ($) { _.top = $.top; _.left = $.left; return _ } while (A = A.offsetParent) { _.top += A.offsetTop; _.left += A.offsetLeft } return _ }, pos: function () { return { left: parseInt(this.left()) || 0, top: parseInt(this.top()) || 0, bottom: parseInt(this.bottom()) || 0, right: parseInt(this.right()) || 0} }, offset: function () { var $ = this.item(0); return { height: $.offsetHeight, width: $.offsetWidth, left: parseInt(this.left()) || $.offsetLeft, top: parseInt(this.top()) || $.offsetTop, bottom: parseInt(this.bottom()) || 0, right: parseInt(this.right()) || 0} }, size: function () { return { width: parseInt(this.width()) || this.item(0).offsetWidth, height: parseInt(this.height()) || this.item(0).offsetHeight} }, blur: function (_, A) { if ($.isNumber(_) || arguments.length == 0) return this.$each(function () { var $ = this; if (_ != null) setTimeout(function () { $.blur && $.blur(); A && A.call($, $) }, _); else { $.blur && $.blur(); A && A.call($, $) } }); else return this.on.apply(this, arrP.concat.apply(["blur"], arguments)) }, focus: function (_, A) { if ($.isNumber(_) || arguments.length == 0) return this.$each(function () { var $ = this; if (_ != null) setTimeout(function () { $.focus && $.focus(); A && A.call($) }, _); else { $.focus && $.focus(); A && A.call($) } }); else return this.on.apply(this, arrP.concat.apply(["focus"], arguments)) }, zIndex: function (_) { if (arguments.length > 0) return this.css("zIndex", _); var A = this.first(), B, $ = 0; while (A.length && A[0] !== doc) { B = A.css("position"); if (B == "absolute" || B == "relative" || B == "fixed") { $ = parseInt(A.css("zIndex")); if (!isNaN($) && $ != 0) return $ } A = A.parent() } return 0 }, focusable: function () { this.length && dh.focusable(this.item(0)); return this }, tabbable: function () { this.length && dh.tabbable(this.item(0)); return this }, append: function (_, $) { dh.append(this, _); return this }, appendTo: function (_, $) { dh.append(_, this); return this }, empty: function (_, $) { return this.$each(function ($) { dh.empty($) }) }, before: function ($) { dh.insertBefore(this, $); return this }, after: function ($) { dh.insertAfter(this, $); return this }, insertBefore: function ($) { dh.insertBefore($, this); return this }, insertAfter: function ($) { dh.insertAfter($, this); return this }, end: function () { return this.context || [] }, destroy: function () { var $ = this.getItems(); for (var _ = $.length - 1; _ > -1; _--) { $[_] = null; arrP.pop.call($) } this.items = this.all = null } }; (function () { var A = docE.style, C = function ($) { return function (_) { return arguments.length > 0 ? this.css($, _) : this.css($) } }; if (browser.isSafari || browser.isChrome) { A = doc.defaultView.getComputedStyle(docE); for (var D = 0; D < A.length; D++) { var B = camelCase(A[D]); if (B.charAt(0) != "-" && !qp[B]) qp[B] = C(B) } A = "border,borderWidth,borderColor,borderStyle,margin,padding,font".split(","); for (D = 0; D < A.length; D++) qp[B] = C(B) } else for (B in A) if (!qp[B]) qp[B] = C(B); var _ = ui.Style.num; $.each(["Height", "Width"], function (B) { var A = B == "Width" ? "Left" : "Top", D = B == "Width" ? "Right" : "Bottom"; qp["inner" + B] = function () { return this[B.toLowerCase()]() + _(this, "padding" + A) + _(this, "padding" + D) }; qp["outer" + B] = function ($) { return this["inner" + B]() + _(this, "border" + A + "Width") + _(this, "border" + D + "Width") + ($ ? _(this, "margin" + A) + _(this, "margin" + D) : 0) }; var C = B.toLowerCase(); qp[C] = function (A) { var _ = this.item(0); if (_ == win) return browser.isStrict && docE["client" + B] || doc.body["client" + B]; if (_ == doc) return Math.max(docE["client" + B], doc.body["scroll" + B], docE["scroll" + B], doc.body["offset" + B], docE["offset" + B]); if (A === undefined) return _ ? ui.Style.get(_, C) : null; else return this.css(C, $.isStr(A) ? A : A + "px") } }) })(); $.extend(qp, { ready: $.ready, val: qp.value, disable: function ($) { return this.attr("disabled", $ != false) }, enable: function ($) { return this.attr("disabled", $ == false) }, hide: qp.css.$format("display", "none"), show: function () { var $ = this.css("display"); if ($ == "none") this.css("display", ""); $ = this.css("visibility"); if ($ == "hidden") this.css("visibility", ""); return this }, map: qp.select, any: function ($, _) { if (arguments.length == 0) return (this.getItems || qp.getItems).call(this).length; this.___count = 1; return (this.___take || qp.___take).apply(this, arguments).length > 0 }, all: function ($, _) { if (arguments.length == 0) return (this.getItems || qp.getItems).call(this); this.___count = 1; this.___isNot = true; return (this.___take || qp.___take).apply(this, arguments).length == 0 }, where: function ($, _) { return (this.___take || qp.___take).apply(this, arguments) }, aggregate: function (_, A) { if (arguments.length == 1) A = _, _ = null; A = $.toFun(A || _); this.each(function (B, C, $) { _ = A.call(this, _, B, C, $) }); return _ }, sum: function (_) { var A = 0; if (_ != null) _ = $.toFun(_); this.each(function (B, C, $) { A += _ == null ? B : _.apply(this, arguments) }); return A }, compareOne: function (_, G, E) { var D, C, F = E; if (_ != null) _ = $.toFun(_); if (G != null) G = $.toFun(G, true); if (G != null && !$.isFun(G)) return G; var B = $.isFun(F), H = $.isBoolean(F), A = F === true, I = F === false; this.each(function (G, I, E) { var $ = _ == null ? G : _.apply(this, arguments); if (H) { if (!(D === undefined || (A ? $ > D : $ < D))) return } else if (!(B ? F.apply(this, $, D, C) : $ == F)) return; D = $, C = G }); if (D === undefined) return; return G == null ? C : G.apply(C, C, D, this) }, max: function ($, _) { return this.compareOne($, _, true) }, min: function ($, _) { return this.compareOne($, _, false) }, average: function ($) { return this.sum.apply(this, arguments) / this.length }, count: function ($, _) { return this.where.apply(this, arguments).length }, distinct: qp.uniquelize, groupBy: function (B, _) { var A = {}; B = $.toFun(B); _ = $.toFun(_); this.each(function (C, E, $) { var D = B == null ? E : B.apply(this, arguments); (A[D] || (A[D] = [])).push(_ == null ? C : _.apply(this, arguments)) }); return A }, clear: function () { var $ = this.getItems(); arrP.splice.call($, 0, this.length); this.updateLength(); return this }, first: function (_, A) { if (arguments.length == 0) { var $ = [], B = (this.getItems || qp.getItems).call(this); if (B.length > 0) $[0] = B[0]; return this.create ? this.create($) : $ } this.___count = 1; return (this.___take || qp.___take).apply(this, arguments) }, last: function (_, A) { if (arguments.length == 0) { var $ = [], B = (this.getItems || qp.getItems).call(this); if (B.length > 0) $[0] = B[B.length - 1]; return this.create ? this.create($) : $ } this.___count = 1; this.___isAsc = false; return (this.___take || qp.___take).apply(this, arguments) }, index: qp.indexOf, lastIndex: qp.lastIndexOf, children: function ($) { return this.$(">" + ($ || 1)) }, next: function ($) { return this.$("+" + (layers || 1)) }, previous: function ($) { return this.$("-" + (layers || 1)) }, sibling: function () { return this.$("~" + (layers || 1)) }, hover: function ($, A, _) { if ($) this.mouseenter.apply(this, [$].concat(slice.call(arguments, 1))); if (A) this.mouseout.apply(this, slice.call(arguments, 1)); return this } }); (function () { qp.avg = qp.average; qp.slideUp = qp.hide; qp.sildeDown = qp.show; var B = { minWidth: "width", minHeight: "height" }; for (var D in B) if (!qp[D]) qp[D] = qp[B[D]]; var F = ["disabled", "id", "name", "title", "className", "text:innerText", "html:innerHTML"]; for (var G = 0; G < F.length; G++) { var C = F[G].replace(/.*:/g, ""); qp[F[G].replace(/:.*/g, "")] = function ($) { return function (_) { return arguments.length > 0 ? this.attr($, _) : this.attr($) } } (C) } qp.bind = qp.on; $.Event.events = ("Blur,Focus,Load,Resize,Scroll,Unload,Click,DblClick,ContextMenu," + "MouseDown,MouseUp,MouseMove,MouseOver,MouseOut,MouseEnter,MouseLeave," + "Change,Select,SelectStart,Submit,KeyDown,KeyPress,KeyUp,Error").split(","); for (G = 0; G < $.Event.events.length; G++) { var _ = $.Event.events[G], A = _.toLowerCase(), E = qp["on" + _] = function ($) { return function () { return this.on.apply(this, arrP.concat.apply([$], arguments)) } } (A); if (!qp[A]) qp[A] = E } })(); qp.applyTo(Array, { item: function ($) { return this[$] }, filter: qp.filter, $type: Array, $create: $.toArray, getItems: $.emptyFun, updateLength: $.emptyFun }); lib.Single = function (_) { this.single = this[0] = $.likeArray(_) ? _[0] : _ }; qp.applyTo(lib.Single, { length: 1, single: null, item: function ($) { return single }, getItems: function () { return new Array(this.single) }, updateLength: $.emptyFun, destroy: function () { this.single = null; this[0] = null } }); $.safeExtend("$", qp, qp); fly.ui.Animate = $.Class({ base: lib.Component, _handle: 0, constructor: function (_) { $.extend(this, _); this.config = _; lib.Animate.baseClass.constructor.apply(this, arguments) }, current: 0, play: function () { if (this.running) return false; var A = this.speed || this.config.speed, A = parseInt((lib.Animate.Speed[A] || A || lib.Animate.Speed.normal) / 20), _ = parseInt(this.start || this.config.start || (this.getter || this.config.getter || this.achieve || this.config.achieve)(this.target, this.attr)); this._step = this.step || this.config.step || ((this.end || this.config.end - _) / 20); this.current = _; if ($.Event.fire(this, "play") == false) return false; win.clearTimeout(this._handle); this.running = true; if (this.attr == "opacity") { var B = ui.Style.get(this.target, "zoom"); if (B == null || B == "normal") ui.Style.set(this.target, "zoom", 1) } var C = this; this._handle = win.setInterval(function () { C.go() }, A) }, go: function () { win.status = this.current; this.achieve.call(this, this.target, this.attr, this.current, this.data || this.config.data); var _ = this.end || this.config.end; if (this._step > 0 ? this.current >= _ : this.current <= _) { $.Event.fire(this, "end"); this.stop(); return } if ($.Event.fire(this, "go") == false) return false; this.current += this._step; if (this._step > 0 ? this.current > _ : this.current < _) this.current = _ }, stop: function () { win.clearTimeout(this._handle); $.Event.fire(this, "stop"); this.running = false; if (this.callback) this.callback.call(this) } }); fly.ui.Animate.Speed = { slow: 300, normal: 200, fast: 100 }; fly.ui.Effect = { style: styleHelper.set }; qp.extend({ animate: function (C, _, B) { var D, $; for (var A in C) D = A, $ = parseInt(C[D]); return qp.$each.call(this, function (C) { var E = "animate " + D + ":" + $, A = lib.Cache.data(C, E) || lib.Cache.data(C, E, new ui.Animate({ target: C, achieve: ui.Effect.style, attr: D, getter: styleHelper.num })); A.speed = _; A.end = $; A.callback = B; A.play() }) }, parseFadeArgs: function (_, A) { return $.isObject(_) ? _ : { speed: _, callback: A} }, fadeOut: function (_, A) { var B = this.$parseFadeArgs.apply(this, arguments); return qp.$each.call(this, function (C) { var _ = new ui.Animate(C, ui.Effect.style, $.extend({ start: 100, end: 0 }, B)); if ($.isFun(A)) _.on("end", A); _.on("end", function ($) { this.hide(); this.css("opacity", 100) } .bind(this)); _.play() }) }, fadeIn: function (_, A) { var B = this.$parseFadeArgs.apply(this, arguments); return qp.$each.call(this, function (C) { this.show(); var _ = new ui.Animate(C, ui.Effect.style, $.extend({ start: 0, end: 100 }, B)); if ($.isFun(A)) _.on("end", A); _.play() }) }, fadeTo: function (A, _, B) { var C = this.$parseFadeArgs(A, B); C.end = _ < 1 ? _ * 100 : _; return qp.$each.call(this, function (D) { var _ = parseInt(ui.Style.get(this[0], "opacity")), A = new ui.Animate(D, ui.Effect.style, $.extend({ start: _ == 0 ? 0 : _ || 100 }, C)); if ($.isFun(B)) A.on("end", B); if (C.end === 0) A.on("end", function () { this.hide(); this.css("opacity", 100) }); A.play() }) } }); (function () { var eFunsCache = {}, nsSelector = $.ns("fly.ui.selector"), hasQueryMethod = !!doc.querySelector, checkDiv = doc.createElement("div"), engine, rSelectors, utils = { propMap: { "class": "className" }, trimCommaReg: /^[\s\,]*\,+|\,+[\s\,]*$/g, expressionInnerReg: /^\s*([\w$]+)\s*([=><*!\^\$]+)([\s\S]+)*/, expressionOuterReg: /\s*(\[[^\[\]]+\])/g, trimQuotationReg: /^\s*['"]?|['"]?\s*$/g, trimMiddleBrackets: /^\s*\[|\]\s*$/g, verySimpleReg: /[\[\]\(\)\s><+]/, containsReg: /:contains\(\s*(\'[^\']*\'|\"[^\"]*\")\s*\)/g, headerTags: ["h1", "h2", "h3", "h4", "h5", "h6"], inputTags: ["input", "textarea", "select", "button"], inputTypes: ["text", "checkbox", "radio", "image", "file", "submit", "reset", "password", "button", "hidden"], relationSelectorReg: /[+\-<>~]/, relationSelectorRegReplace: /([+\&<>~]+)(\d*)/g, getByTagPropFilter: function (_, B, A) { return function (G, D, C) { var E = { selector: _, onlyFilterContext: C.onlyFilterContext }; if (B == null) return executors.byTagName(G, D, E); var F = new nsSelector.Collector(); executors.byTagName(G, F, E); $.each(F.result, function ($) { if ($[B] == A) D.result.push($) }) } }, getCommonFilter: function (_) { _ = $.toFun(_); return function (B, A, $, D) { if (!$.onlyFilterContext) { var C = new nsSelector.Collector(); executors.all(B, C, { onlyFilterContext: false }); B = C.result } _(B, A, $) } }, getSimpleOperator: function (_) { return $.toFun("o,left, right=>o[left] " + _ + " right") } }; nsSelector.Collector = function (_, $) { this.result = _ || []; this.unique = $; if ($ && this.res.length > 0) this.result = this.uniquelize() } .extend({ allID: ",", uniquelize: function (_, C) { if (this.result.length < 2) return; var B = this.result, D = -1, A = B.length; this.allID = ","; _ = _ || 0; C = C == null ? A : C; while (++D < A) { var $ = B[D].uniqueNumber || ui.DomHelper.getUniqueID(B[D]); if (D >= _ && D < C && this.allID.indexOf("," + $ + ",") > -1) { B.splice(D, 1); D--, A--; continue } this.allID += $ + "," } }, merge: function (_) { if (_.length == 0) return; this.result.length == 0 ? this.result = $.toArray(_) : this.result.merge(_); if (this.unique) this.uniquelize() }, push: function (_) { if (this.unique) { var $ = _.uniqueNumber || ui.DomHelper.getUniqueID(_); if (this.allID.$contains("," + $ + ",")) return false; this.allID += $ + "," } this.result.push(_); return true }, contains: function ($) { if (this.unique) return this.allID.$contains("," + $.uniqueNumber || ui.DomHelper.getUniqueID($) + ","); return this.result.$contains($) }, clear: function () { this.result = []; this.allID = "," } }).extend(nsSelector.Collector); var executors = { _all: function (_) { if (_.all) return _.all; else if (_.getElementsByTagName) return _.getElementsByTagName("*"); else { var $ = []; (function ($, _) { var B = ui.DomHelper.children($); if (B != null) for (var A = 0; A < B.length; A++) arguments.callee(_.push(B[A]), _) })(_, $); return $ } }, all: function (A, _, $) { if ($.onlyFilterContext) return _.merge(A); for (var B = 0; B < A.length; B++) _.merge(executors._all(A[B])) }, byId: function (E, _, $) { var B = $.selector; for (var G = 0; G < E.length; G++) { var C = E[G]; if ($.onlyFilterContext) { if (C.id == B) _.result.push(C) } else if (C.getElementById) { var A = C.getElementById(B); if (A) _.result.push(A) } else { var F = executors._all(C), D = -1; while (++D < F.length) if (F[D].id == B) return _.result.push(F[D]) } } }, byCss: function (D, _, $) { var A = new RegExp("\\s" + $.selector + "\\s"); for (var F = 0; F < D.length; F++) { var B = D[F]; if ($.onlyFilterContext) { if (A.test(" " + B.className + " ")) _.result.push(B) } else { var E = executors._all(B), C = -1; while (++C < E.length) if (A.test(" " + E[C].className + " ")) _.result.push(E[C]) } } }, byName: function (D, _, $) { var A = $.selector; for (var F = 0; F < D.length; F++) { var B = D[F]; if ($.onlyFilterContext) { if (B.name == A) _.result.push(B) } else if (B.getElementsByName) _.merge(B.getElementsByName(A)); else { var E = executors._all(B), C = -1; while (++C < E.length) if (E[C].name == A) _.result.push(E[C]) } } }, byTagName: function (E, A, _) { var B = _.selector; if ($.isArray(B)) { for (var G = 0; G < B.length; G++) arguments.callee(E, A, { selector: B[G], onlyFilterContext: _.onlyFilterContext }); return } B = B.toUpperCase(); for (G = 0; G < E.length; G++) { var C = E[G]; if (_.onlyFilterContext) { if (C.nodeName == B) A.result.push(C) } else if (C.getElementsByTagName) A.merge(C.getElementsByTagName(B)); else { B = B.toUpperCase(); var F = executors._all(C), D = -1; while (++D < F.length) if (F[D].nodeName == B) A.result.push(F[D]) } } }, clear: function (A, _, $) { _.clear() }, expression: function (context, collector, selector) { var all; if (selector.onlyFilterContext) all = context; else { var ac = new nsSelector.Collector(); executors.all(context, ac, { onlyFilterContext: false }); all = ac.result } var exp = selector.selector.replace(utils.trimMiddleBrackets, "").$trim(); if (/^\d+$/.test(exp)) { var node = all[exp]; if (node) collector.result.push(node); return } else if (/^[\w$][\w\d$]*$/.test(exp)) exp = "o.getAttribute('" + exp + "')!=undefined"; var option = eFunsCache[exp]; if (option == null) { var fun, match = exp.match(utils.expressionInnerReg); if (match != null) { var operator = match[2]; if (operator && (fun = nsSelector.Selectors.operators[operator])) { var left = match[1].replace(utils.trimQuotationReg, ""); utils.propMap[left] && (left = utils.propMap[left]); var right = match[3]; try { right = eval(right) } catch (e) { } } } if (!$.isFun(fun)) fun = $.toFun(fun || (exp.indexOf("=>") > -1 ? exp : "o=>with(o){ return " + exp + "}")); option = eFunsCache[exp] = { fun: fun, left: left, right: right} } var i = -1, len = all.length; while (++i < len) if (option.fun(all[i], option.left, option.right, i, all)) collector.result.push(all[i]) }, filter: function (A, _, $) { var C = $.selector.replace(/\(.*/, ""), B; if (C && (B = nsSelector.Selectors.filters[C]) != null) B(A, _, $); else throw new Error("\u4e0d\u652f\u6301\u8fc7\u6ee4\u5668\u201c" + $.selectorStr + "\u201d") }, children: function (B, _, $) { var A = $.selectorStr, C = parseInt($.selector); function D(A, $) { var B = ui.DomHelper.children(A); if ($ == C) _.merge(B); else for (var E = 0; E < B.length; E++) D(B[E], $ + 1) } for (var E = 0; E < B.length; E++) D(B[E], 1) }, sibling: function (B, _, $) { var A = $.selectorStr; for (var C = 0; C < B.length; C++) _.merge(ui.DomHelper.children(B[C].parentNode)) }, getCommonRelationFun: function ($) { return function (C, A, _) { var B = _.selectorStr, D = parseInt(_.selector); function E(B, _) { var C = B[$]; if (C == null) return; if (C.nodeType != 1) E(C, _); else if (_ == D) A.result.push(C); else E(C, _ + 1) } for (var F = 0; F < C.length; F++) E(C[F], 1) } } }; nsSelector.Selectors = { executors: executors, sTypes: new Array, splitRegFormat: "\\s*([{0}]+| |[\u03b1]|[><+\\&~]+)\\s*", splitReg: /\s*( )\s*/g, needFollows: {}, operators: { "!=": utils.getSimpleOperator("!="), "^=": $.toFun("o,left, right=>var v = o[left] ; return v && v.substr(0, right.length) == right"), "$=": $.toFun("o,left, right=>var v = o[left] ; return v && v.substr(v.length - (right.length)) == right"), "*=": $.toFun("o, left, right=>var v = o[left] ;return v && v.indexOf(right) > -1"), "=": utils.getSimpleOperator("=="), "==": utils.getSimpleOperator("=="), ">": utils.getSimpleOperator(">"), "<": utils.getSimpleOperator("<"), ">=": utils.getSimpleOperator(">="), "<=": utils.getSimpleOperator("<=") }, filters: { empty: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].firstChild==null)cr.result.push(c[i])"), parent: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].firstChild!=null)cr.result.push(c[i])"), enabled: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].disabled!=true)cr.result.push(c[i])"), disabled: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].disabled==true)cr.result.push(c[i])"), undisplay: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(!dh.isIsDisplay(c[i]))cr.result.push(c[i])"), display: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.isIsDisplay(c[i]))cr.result.push(c[i])"), unvisible: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(!dh.isVisible(c[i]))cr.result.push(c[i])"), visible: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.isVisible(c[i]))cr.result.push(c[i])"), hidden: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.isHidden(c[i]))cr.result.push(c[i])"), first: utils.getCommonFilter("c,cr,s=>if(c[0]!=null){cr.result.push(c[0]) ;return true}"), last: utils.getCommonFilter("c,cr,s=>if(c[c.length-1]!=null){cr.result.push(c[c.length-1]);return true}", true), even: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(i%2===0)cr.result.push(c[i])"), odd: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(i%2!==0)cr.result.push(c[i])"), "eq()": utils.getCommonFilter("c,cr,s=>var o=c[s.follow.selector]; if(o)cr.result.push(o)"), "gt()": utils.getCommonFilter("c,cr,s=>for(var i = parseInt(s.follow.selector)+1; i < c.length; i ++ )cr.result.push(c[i])"), "lt()": utils.getCommonFilter("c,cr,s=>for(var i = 0,end=Math.min(parseInt(s.follow.selector),c.length); i < end; i ++ )cr.result.push(c[i])"), "not()": function (D, A, _) { _.follow.onlyFilterContext = _.onlyFilterContext; var C = new nsSelector.Collector(); _.follow.find(D, C); var B = ","; $.each(C.result, function ($) { B += ui.DomHelper.getUniqueID($) + "," }); utils.getCommonFilter(function (A, $, _) { for (var C = 0; C < A.length; C++) if (B.indexOf("," + ui.DomHelper.getUniqueID(A[C]) + ",") < 0) $.result.push(A[C]) })(D, A, _) }, "has()": function (B, _, $) { var C = new nsSelector.Collector(); executors.children(B, C, { selector: 1 }); $.follow.onlyFilterContext = $.onlyFilterContext; var A = new nsSelector.Collector(); $.follow.find(C.result, A); executors.parentNode(A.result, _, { selector: 1 }) }, "data()": utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(fly.data(c[i],s.follow.selector)) cr.result.push(c[i])"), header: utils.getByTagPropFilter(utils.headerTags), input: utils.getByTagPropFilter(utils.inputTags), checked: utils.getByTagPropFilter("input", "checked", true), unchecked: utils.getByTagPropFilter("input", "checked", false), selected: utils.getByTagPropFilter("option", "selected", true), unselected: utils.getByTagPropFilter("option", "selected", false), focusable: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.focusable(c[i]))cr.result.push(c[i])"), tabbable: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.tabbable(c[i]))cr.result.push(c[i])") }, extendSelector: function (_) { for (var $ in _) this.executors[$] = _[$], this.sTypes.push($); var A = this.sTypes.join("").replace(/\s/g, "").replace(utils.relationSelectorRegReplace, "").replace("\u03b1", ""); this.splitReg = new RegExp(this.splitRegFormat.$format(A), "g") }, extendFilter: function (B) { $.extendIf(this.filters, B); for (var A in this.filters) if (A.substr(A.length - 2) == "()") { var _ = A.substr(0, A.length - 2); this.filters[_] = this.filters[A]; delete this.filters[A]; this.needFollows[":" + _] = this.needFollows[" :" + _] = true } }, extendOperator: function (_) { $.extend(this.operators, _) } }; with (executors) { nsSelector.Selectors.extendSelector({ "*": all, "#": byId, ".": byCss, $: byName, "\u03b1": expression, " ": byTagName, ">": children, "<": getCommonRelationFun("parentNode"), "+": getCommonRelationFun("nextSibling"), "&": getCommonRelationFun("previousSibling"), "~": sibling, ":": filter, "\u03b8": $.emptyFun }) } var inputFilters = {}, ti = -1, iType; while (iType = utils.inputTypes[++ti]) inputFilters[iType] = utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].type==='" + iType + "')cr.result.push(c[i])"); nsSelector.Selectors.extendFilter(inputFilters); nsSelector.Engine = engine = function ($, _) { this.parent = _; if (_) this.root = _.root, this.onlyFilterContext = _.onlyFilterContext; else this.root = this; this.init($) } .extend({ isSimple: true, onlyFilterContext: false, init: function (_) { if ($.isStr(_)) { this.selectorStr = this.selector = _; this.setIsSimple(this.onlyFilterContext == false && engine.isSimple(this.selectorStr)); if (!this.isSimple) { if (this.selector.indexOf(":") > -1) if (this.selector.indexOf(":contains(") > -1) this.selector = this.selector.replace(utils.containsReg, function (_, $) { return '[innerText*="' + $ + '"]' }); if (!this.parent) this.extractExpression().extractGroups(); this.parse() } } else { for (var A in _) this[A] = _[A]; if (this.type == "\u03b1") this.selector = this.selectorStr = this.root.expressions[this.selector]; else if (this.type == "\u03b8") return this.init(this.root.groups[this.selector]); if (this.follow) this.follow = new nsSelector.Engine(this.follow, this); this.setIsSimple(this.onlyFilterContext == false && engine.isSimple(this.selectorStr)); if (!this.isSimple) this.achieve = executors[this.type] } }, setIsSimple: function ($) { this.isSimple = $ }, isVerySimple: function () { if (this.verySimple != undefined) return this.verySimple; if ((this.sequence && this.sequence.length > 0) || (this.childs && this.childs.length > 0)) return this.verySimple = false; if (this.verySimple = !utils.verySimpleReg.test(this.selector)) { this.parse(); this.achieve = executors[this.type] } return this.verySimple }, extractExpression: function ($) { var _ = this.expressions = new Array; this.selector = this.selector.replace(utils.expressionOuterReg, function (A, $) { _.push($); return (A.indexOf("[") > 0 ? " \u03b1" : "\u03b1") + (_.length - 1) }); return this }, extractGroups: function () { var $ = this.groups = new Array; this.selector = this.selector.replace(/\(([^\)]+)\)/g, function (A, _) { $.push(_.$trim()); return "\u03b8" + ($.length - 1) }); return this }, makeChilds: function () { this.childs = new Array; var $ = this.selector.split(","); for (var _ = 0; _ < $.length; _++) if ($[_] != "") this.childs.push(new engine($[_], this)) }, makePath: function () { var C = new Array, B; if (B = utils.relationSelectorReg.test(this.selector)) this.selector = this.selector.replace(utils.relationSelectorRegReplace, function (_, $, A) { return $.charAt(0) + (A == "" ? $.length : parseInt(A) + $.length - 1) + " " }); this.selector = this.selector.$trim(); var A = (" " + this.selector).replace(nsSelector.Selectors.splitReg, function (_, $) { C.push({ selectorStr: _, onlyFilterContext: !/^\s/.test(_), type: $ }); return "\u03be" }); C[0].onlyFilterContext = this.onlyFilterContext; var _ = A.substr(1).split("\u03be"); for (var E = 0; E < _.length; E++) { var $ = C[E]; $.selectorStr += ($.selector = _[E]); if (B && C.length > E + 1 && utils.relationSelectorReg.test($.type)) C[E + 1].onlyFilterContext = true; else if ($.type == "\u03b8" && E > 0 && $.onlyFilterContext) { var D = C[E - 1]; if (nsSelector.Selectors.needFollows[D.selectorStr] == true && D.follow == null) { D.follow = $; C.splice(E, 1); _.splice(E, 1); E-- } } } if (C.length == 1) this.init(C[0]), C = null; else for (E = 0; E < C.length; E++) C[E] = new engine(C[E], this); this.sequence = C; return this }, parse: function ($) { return this.selector.indexOf(",") > -1 ? this.makeChilds() : this.makePath() }, findChilds: function () { var _ = ""; for (var B = 0; B < this.childs.length; B++) { var $ = this.childs[B]; if (hasQueryMethod && $.isSimple && this.context.isDom != false) _ += "," + $.selectorStr; else { var A = new nsSelector.Collector(); $.find(this.context, A); this.collector.merge(A.result) } } if (_ != "") { A = new nsSelector.Collector(); engine.queryByProtogenic(this.context, A, _.substr(1)); this.collector.merge(A.result) } }, isChilds: function ($) { for (var _ = 0; _ < this.childs.length; _++) if (this.childs[_].is($, this.context)) return true; return false }, findPath: function () { var B = "", C = new nsSelector.Collector(), A = this.context; function $() { if (B != "") { engine.queryByProtogenic(A, C, B.substr(1)); A = C.result; C.clear(); B = "" } } for (var D = 0; D < this.sequence.length; D++) { var _ = this.sequence[D]; if (hasQueryMethod && _.isSimple && this.context.isDom != false) B += (this.onlyFilterContext ? "" : " ") + _.selectorStr; else { $(); _.find(A, C); A = C.result; C.clear() } } $(); this.collector.merge(A) }, isPath: function (B) { var A = B; for (var C = this.sequence.length - 1; C > -1; C--) { var _ = this.sequence[C]; while (true) { if (A == null || A.nodeType !== 1) return false; var $ = _.is(A, this.context); if (!$) { if (A == B) return false; else A = A.parentNode } else { A = A.parentNode; break } } } return true }, find: function (_, $) { if (this.selectorStr == "") return; this.context = _; this.collector = $; if (this.isSimple && _.isDom != false) engine.queryByProtogenic(_, $, this.selectorStr); else if (this.childs != null && this.childs.length > 0) this.findChilds(); else if (this.sequence != null && this.sequence.length > 0) this.findPath(); else this.achieve(_, $, this) }, filter: function (B, A, $) { for (var C = 0; C < B.length; C++) { var _ = B[C]; if (this.is(_, A)) $.push(_) } }, is: function (B, D) { this.context = D; if (this.childs != null && this.childs.length > 0) return this.isChilds(B); else if (this.sequence != null && this.sequence.length > 0) return this.isPath(B); else if (this.isSimple && this.isVerySimple() == false) { var $ = B.id, C = B.id = "fly_" + Math.random(), E = this.selectorStr + "[id='" + C + "']"; D = D || [doc]; for (var F = 0; F < D.length; F++) if (D[F].querySelector(E)) return true; B.id = $; return false } else { var A = [{ all: [B]}]; A.isDom = false; var _ = new nsSelector.Collector(); this.achieve(A, _, this); return _.result.length > 0 } } }).extend(nsSelector.Engine); engine.utils = utils; engine.isSimple = function ($) { try { return hasQueryMethod && checkDiv.querySelector($) != false } catch (_) { return false } }; engine.queryByProtogenic = function (A, _, $) { for (var B = 0; B < A.length; B++) _.merge(A[B].querySelectorAll($)); return _.result }; engine.cache = {}; engine.create = function ($) { return engine.cache[$] || (engine.cache[$] = new engine($)) }; nsSelector.DomQuery = function (_, $) { this.context = _; this.selectors = $ } .extend({ createResult: function ($, _) { $.context = _; $.isDomArray = true; return $ }, extractSelectorStr: function () { var _ = this.selectorStr = ""; for (var A = 0; A < this.selectors.length; A++) { if ($.isFun(_ = this.selectors[A])) $.onLoad(_); if (_ == null) continue; if (!$.isStr(_)) this.collector.push(_); else if ($.isHtml(_)) this.collector.merge(dh.create(_)); else this.selectorStr += (this.selectorStr == "" ? "" : ",") + _.replace(utils.trimCommaReg, "") } return this }, find: function () { if (this.selectors.length == 1 && this.selectors[0] && this.selectors[0].$isIList == true) return this.selectors[0]; this.collector = new nsSelector.Collector(); this.extractSelectorStr(); if (/^\s*$/g.test(this.selectorStr) == false) { this.selector = engine.create(this.selectorStr); this.selector.find(this.context || [doc], this.collector) } this.collector.uniquelize(); return this.createResult(this.collector.result, this.context) }, filter: function (_) { this.extractSelectorStr(); this.selector = engine.create(this.selectorStr); var $ = new nsSelector.Collector(); this.selector.filter(_, _.context, $); return this.createResult($.result, this.context) }, is: function ($) { this.extractSelectorStr(); this.selector = engine.create(this.selectorStr); for (var _ = 0; _ < $.length; _++) if (this.selector.is($[_], $.context)) return true; return false }, closest: function (C) { var B = C.context, $ = new nsSelector.Collector(); this.extractSelectorStr(); var A = new nsSelector.Collector(null, true); if (this.selectors.length == 0) return C; this.selector = engine.create(this.selectorStr); for (var D = 0; D < C.length; D++) { var _ = C[D]; while (_ && _.nodeType === 1 && A.push(_)) if (this.selector.is(_, B)) { $.push(_); break } else _ = _.parentNode } A = null; return this.createResult($.result, B) }, parent: function (C) { var B = C.context, $ = new nsSelector.Collector(); this.extractSelectorStr(); var A = new nsSelector.Collector(null, true); this.selector = this.selectors.length == 0 ? null : engine.create(this.selectorStr); for (var D = 0; D < C.length; D++) { var _ = C[D].parentNode; if (_ && _.nodeType === 1 && A.push(_) && (!this.selector || this.selector.is(_, B))) $.push(_) } A = null; return this.createResult($.result, B) }, parents: function (C) { var B = C.context, $ = new nsSelector.Collector(); this.extractSelectorStr(); var A = new nsSelector.Collector(null, true); this.selector = this.selectors.length == 0 ? null : engine.create(this.selectorStr); for (var D = 0; D < C.length; D++) { var _ = C[D]; while ((_ = _.parentNode) && _.nodeType === 1 && A.push(_)) if (this.selector == null || this.selector.is(_, B)) $.push(_) } A = null; return this.createResult($.result, B) } }).extend(nsSelector.DomQuery); function extendSelectorMethod(_) { _ = $.isStr(this) ? this : _; qp.extend(_, function ($) { var A = new ui.selector.DomQuery(this.context, arguments); return A[_](this) }) } $.each(["filter", "is", "closest", "parent", "parents"], extendSelectorMethod); qp.extend("$", $); qp.extend("find", $) })(); if (config.onLoad) $.onLoad(config.onLoad, $, $); $.doc = $(docE); $.getBody = function () { if ($.body) return $.body; if (!doc.body) return null; return $.body = $(doc.body) } })(this)