var ddd = new Date(), $$contexts = []; $$contexts.add = function (_, $) { $$contexts.push ({ win: _, $: $ }); function A() { for (var C = 0; C < $$contexts.length; C++) if ($$contexts[C].win == _) $$contexts.splice(C, 1); _.detachEvent && _.detachEvent("onunload", A); try { _.removeEventListener && _.removeEventListener("unload", A) } catch (B) { } $.destroy(); A = null } $.onUnload(A) }; $$contexts.$ = function (win) { eval(win.copyContentObjs = "var Array = win.Array, String = win.String, Date = win.Date, Function = win.Function, doc = win.document, docE = doc.documentElement"); win.$setup = arguments.callee; win._$isWindow = true; function destroy(_) { if (arguments.length == 1) { if (_.destroy && _.destroy != arguments.callee) _.destroy(); else if (Array && _ instanceof Array) { arguments.callee.apply(false, _); for (var B = _.length - 1; B > -1; B--) { _[B] = null; _.pop() } } for (var A in _) { var $ = _[A]; _[A] = null; if ($ && $.destroy) $.destroy(); $ = null } } else if (arguments.length == 0) { this.destroy = null; arguments.callee.call(false, this) } else for (B = 0; B < arguments.length; B++) arguments.callee.call(false, arguments[B]); if (this != false) window.CollectGarbage && CollectGarbage() } var fly = win.fly = function () { var $ = function (A) { var _ = null; if (this._$isWindow || this == fly) { if (A && arguments.length == 1) { if (A.isIList) return A; if (fly.isFun(A)) return fly.onLoad(A); else if (!fly.isString(A)) return fly.toArray(A) } } else _ = fly.isArray(this) ? this : (fly.likeArray(this) ? fly.toArray(this) : [doc]); var B = (new $.ui.selector.DomQuery(_, arguments)).find(); return B }, _ = win.flyConfig || {}; $.version = "1.0"; $.addAlias = function (_) { if (fly.isArray(_)) $.each(_, function (_) { win[_] = $ }); else win[_] = $; return $ }; $.__onLoad = function () { $$contexts.add(win, $); if (_.alias) $.addAlias(_.alias); else win.$ = win.$ || $; $.ifFun(_.onLoad, $, $) }; $.__old = (win.fly || (_.rename ? win[_.rename] : null)); if ($.__old) for (var A in $.__old) $[A] = $.__old[A]; $.destroy = function () { this.destroy = null; destroy.apply(this, arguments); if (arguments.length == 0) { try { destroy(Array.prototype, String.prototype, Function.prototype); Array = String = Date = Function = null } catch ($) { } if (win) win.fly = win.$ = doc = win.$setup = win._$isWindow = destroy = null } }; return $ } (); fly.ns = function (B) { if (arguments.length > 1) { for (var A = 0; A < arguments.length; A++) fly.ns(arguments[A]); return } var _ = B.split("."), $ = win; for (A = 0; A < _.length; A++) $ = $[_[A]] || ($[_[A]] = { destroy: destroy }); return $ }; fly.Class = function (I) { var E = I.base, G = I.beforeNew, C = I.afterNew, B = I.constructor; if (B == Object || B == null) B = $.isFun(E) ? function () { E.apply(this, arguments) } : function () { }; if (fly.isFun(G) || fly.isFun(C)) B = function () { if (fly.isFun(G)) G.apply(this, arguments); this.constructor.apply(this, arguments); if (fly.isFun(C)) C.apply(this, arguments) }; var F = fly.isFun(E) ? E.prototype : (fly.isObject(E) ? E : Object.prototype); function _() { } _.prototype = F; B.prototype = new _(); B.prototype.$base = F; if (fly.isFun(E)) for (var D in E) if (!(D in B)) B[D] = E[D]; if (I.inherit) { var A = fly.isArray(I.inherit) ? I.inherit : [I.inherit]; fly.each(A, function ($) { fly.extendIf(B.prototype, $) }); delete I.inherit } delete I.beforeNew; delete I.afterNew; delete I.constructor; delete I.base; for (var H in I) B.prototype[H] = I[H]; B.$base = fly.isFun(E) ? E : Object; B.prototype.constructor = B; return B }; fly.ns("fly.data"); fly.ns("fly.plugins"); var lib = fly.ns("fly.lib"), ui = fly.ns("fly.ui"), collection = fly.ns("fly.collection"), browser = fly.browser || (fly.browser = {}), arrP = Array.prototype, slice = arrP.slice, toStr = Object.prototype.toString, qp = null, dh, toFun, camelCase = function ($) { $ = $.replace(/\-\w/g, function ($) { return $.charAt(1).toUpperCase() }); return $.charAt(0).toLowerCase() + $.substr(1) }; with (browser) { var ua = browser.userAgent = navigator.userAgent.toLowerCase(); function check($) { return $.test(ua) } browser.doc = doc; browser.isStrict = doc.compatMode == "CSS1Compat"; browser.isFirefox = check(/firefox/); browser.isOpera = check(/opera/); browser.isChrome = check(/chrome/); browser.isWebKit = check(/webkit/); browser.isSafari = !isChrome && check(/safari/); browser.isSafari2 = isSafari && check(/applewebkit\/4/); browser.isSafari3 = isSafari && check(/version\/3/); browser.isSafari4 = isSafari && check(/version\/4/); browser.isIE = !isOpera && check(/msie/); if (browser.isIE) { browser.ieVersion = ua.match(/msie (\d+)/)[1]; browser["isIE" + browser.ieVersion] = true } browser.isGecko = !isWebKit && check(/gecko/); browser.isGecko2 = isGecko && check(/rv:1\.8/); browser.isGecko3 = isGecko && check(/rv:1\.9/); browser.isBorderBox = isIE && !isStrict; browser.isWindows = check(/windows|win32/); browser.isMac = check(/macintosh|mac os x/); browser.isAir = check(/adobeair/); browser.isLinux = check(/linux/); browser.isSecure = /^https/i.test(win.location.protocol); browser.isMoz = check(/mozilla/) && !browser.isOpera && !browser.isIE; browser.diffAttrs = { styleRemoveMethod: docE.style.removeProperty ? "removeProperty" : "removeAttribute" }; browser.name = isIE ? "IE" + browser.ieVersion : isFirefox ? "FF" : isOpera ? "Opera" : isChrome ? "Chrome" : isSafari ? "Safari" : ""; if (browser.isMoz) { win.Event.prototype.__defineGetter__("x", function () { return this.clientX + 2 }); win.Event.prototype.__defineGetter__("y", function () { return this.clientY + 2 }); var htmlProp = HTMLElement.prototype; htmlProp.__defineGetter__("innerText", function () { return this.textContent }); htmlProp.__defineSetter__("innerText", function ($) { return this.textContent = $ }); htmlProp.__defineGetter__("outerHTML", function () { var _ = this.attributes, $ = "<" + this.tagName, A = 0; for (; A < _.length; A++) if (_[A].specified) $ += " " + _[A].name + '="' + _[A].value + '"'; if (!this.canHaveChildren) return $ + " />"; return $ + ">" + this.innerHTML + "</" + this.tagName + ">" }); htmlProp.__defineSetter__("outerHTML", function (_) { var A = this.ownerDocument.createRange(); A.setStartBefore(this); var $ = A.createContextualFragment(_); this.parentNode.replaceChild($, this); return _ }); htmlProp.__defineGetter__("canHaveChildren", function () { return !/^(area|base|basefont|col|frame|hr|img|br|input|isindex|link|meta|param)$/.test(this.tagName.toLowerCase()) }) } } fly.extend = function (A, $) { if (arguments === 1) return fly.extend(fly, A); var B = fly.isString(this), C = B ? this.length : -1; for (var E = 1; E < arguments.length; E++) { var _ = arguments[E]; if (_) for (var D in _) { if (D.charAt(0) === "$") continue; if (B) { if (this != "" && D.substr(0, C) != this) A[this + D] = _[D]; if (!(D in A)) A[D] = _[D] } else if (this != false || A[D] == undefined) A[D] = _[D] } } return A }; fly.quickExtend = function (A, $) { if ($) for (var B in $) { if (B.charAt(0) === "$") continue; var _ = $[B]; if (_ != undefined) A[B] = _ } return A }; fly.extend(fly, { regPlugin: function ($) { $$contexts.each(function () { $(this.$, this.win) }); return this }, BREAK: new Object(), safeExtend: function (_, A, $) { return fly.extend.apply(_, slice.call(arguments, 1)) }, extendIf: function (_, $) { return fly.extend.apply(false, arguments) }, copy: function ($) { return fly.quickExtend({}, $) }, merge: function ($) { return fly.extend.apply(null, [{}].concat(fly.slice(arguments, 0))) }, nullIf: function (_, $) { return _ == null ? $ : _ }, get: function (_, $) { if (fly.isString(_)) return fly.lib.ajax.get.apply(this, arguments); if (_.attributes && !($ in _)) return _.getAttribute($); else return _[$] }, set: function (A, _, $) { arguments.length > 2 ? fly._set(A, _, $) : fly.setBy(A, _); return A }, _set: function (A, _, $) { A[_] = $ }, data: function (A, _, $) { var B = fly.isObject(_); if (arguments.length < 3 && !B) return A[_]; if (B) for (var C in _) A[C] = _[C]; else A[_] = $; return this }, foucsableTypeRegs: /(BUTTON|INPUT|OBJECT|SELECT|TEXTAREA)/, clickableTypeRegs: /^(A|AREA)$/, attrGeters: {}, attr: function (A, _, $) { var B = fly.isObject(_); if (arguments.length < 3 && !B) { var D = _.toLowerCase(); if (this.isDom(A) && this.attrGeters[D]) return this.attrGeters[D](A); return A.getAttribute && !(_ in A) ? A.getAttribute(_) : A[_] } if (B) for (var C in _) A.setAttribute && !(C in A) ? A.setAttribute(C, _[C]) : A[C] = _[C]; else A.setAttribute && !(_ in A) ? A.setAttribute(_, $) : A[_] = $; return this }, valueGeters: { option: function ($) { return ($.attributes.value || {}).specified ? $.value : $.text }, select: function ($) { if ($.type === "select-one") return $.selectedIndex > -1 ? fly.valueGeters.option($.options[$.selectedIndex]) : null; var _ = new Array; for (var A = 0; A < $.options.length; A++) if ($.options[A].selected) _.push(fly.valueGeters.option($.options[A])); return _ }, input: function (_) { var $ = _.type; if ($ == "radio" || $ == "checkbox") return _.value == null ? "on" : _.value; else return _.value } }, valueSeters: { select: function (C, _) { var B = C.type === "select-one", D = fly.likeArray(_); for (var E = 0; E < C.options.length; E++) { var A = C.options[E], $ = fly.valueGeters.option(A); if ((A.selected = $ == _ || (D && fly.inArray($, _))) && B) return } } }, value: function (C, B) { if (arguments.length == 1) { var A = C.nodeName.toLowerCase(), _ = fly.valueGeters[A]; return _ ? _(C) : _.value } else { var A = C.nodeName.toLowerCase(), _ = fly.valueSeters[A], $ = fly.ifFun.call(C, B, C); _ ? _(C, $) : (C.value = $); return this } }, firstNotNull: function ($) { var _ = -1; while (++_ < arguments.length) if (arguments[_] != null) return arguments[_] }, setBy: function ($, _) { for (var A in _) fly._set($, A, _[A]); return $ }, is: function () { var _ = function (A, B, _) { return _ ? toStr.call(A) == "[object " + _ + "]" : (A == B || (A == null || B == null ? false : $.isFun(B) && (A instanceof B || (A.constructor == B || String(A.constructor) == String(B))))) }, A = ["Date", "Number", "Boolean", "String", "Array", "Function", "Object"]; for (var B = 0; B < A.length; B++) (function ($) { var _ = "[object " + $ + "]"; fly["is" + $] = function ($) { return $ != null && toStr.call($) === _ } } (A[B])); fly.isFun = fly.isFunction; return _ } (), isHtml: function () { var $ = /<[\w]+[\s\S]+>/; return function (_) { return fly.isString(_) && $.test(_) } } (), isEmpty: function ($, _) { return $ === null || $ === undefined || ((fly.likeArray($) && !$.length)) || (_ ? false : $ === "") }, likeArray: function ($) { return $ && (fly.isArray($) || (typeof ($.length) == "number" && !fly.isFun($) && !fly.isString($) && !$._$isWindow && (!$.nodeName || !$.ownerDocument))) }, isIList: function ($) { return $.isIList == true }, isDom: function ($) { return $ && $.nodeType === 1 && $.ownerDocument }, toArray: function (_) { if (fly.isArray(_)) return _; if (!fly.likeArray(_)) return new Array(_); if (fly.isFun(_.callee)) return slice.call(_, 0); var $ = new Array, A = _.length; while (--A != -1) $[A] = _[A]; return $ }, slice: function (_, $, A) { return slice.call(fly.toArray(_), $, A == undefined ? 1000000 : A) }, each: function (_, A, $) { if (fly.likeArray(_)) for (var B = 0; B < _.length; B++) if (A.call($ || _[B], _[B], B, _) == fly.BREAK) break; else for (B in _) if (A.call($ || _[B], _[B], B, _) == fly.BREAK) break; return this }, inArray: function (_, A) { var $ = arguments, B = 1; if (arguments.length == 2 && fly.likeArray(A)) $ = A, B = 0; for (; B < $.length; B++) if ($[B] == _) return true; return false }, emptyFun: function () { return this }, falseFun: function () { return false }, lambda: function ($) { return fly.isFun($) ? $ : function () { return $ } }, toFun: toFun = function () { var reg = /\b(if|for|with|while|do|switch|throw|return|var)\b/, cache = {}; function attachReturn($, _) { if (reg.test($) == false && (_ == null || reg.test(_) == false)) $ = "return " + $; return $ } return function (expression, onlyStr, format) { var isStr = fly.isString(expression); if ((onlyStr == true && isStr == false) || fly.isFun(expression)) return expression; if (isStr == false && format == null) return function () { return expression }; var key = arguments.length < 4 ? expression + (onlyStr || "") + (format || "") : "", fn; if (key != "" && (fn = cache[key])) return fn; var params, ms; if (fly.isString(expression) && (ms = expression.match(/^([\s,\w$_]*)=>/))) { params = ms[1]; expression = expression.replace(/^([\s,\w$]*)=>/, ""); expression = attachReturn(expression, format); if (format) { var r = /\bfunction\s*\(([\s,\w$_]*)\)/; ms = r.exec(format); if (/^\s*$/.test(ms[1])) format = format.replace(r, " function(" + params + ")"); else { var pStrs = params.split(","); for (var i = 0; i < pStrs.length; i++) expression = "var " + pStrs[i] + "=arguments[" + i + "];" + expression } } else format = "function(" + params + "){{0}}" } else expression = attachReturn(expression, format); if (/\bas\b/.test(expression)) expression = "var as=arguments; " + expression; var args = arguments; if (format) fn = eval("___f=" + format.$format(expression)); else fn = eval("___f=function(x,y,z){" + expression + "}"); if (key != "") cache[key] = fn; return fn } } (), ifFun: function ($, _) { if ($ && fly.isFun($)) return arguments.length > 1 ? $.apply(this, slice.call(arguments, 1)) : $.call(this); return $ }, format: function ($, _) { return ($.$format || $.format).apply($, slice.call(arguments, 1)) }, globalEval: function (A) { if (A == null || /^\s*$/.test(A)) return; var _ = doc.getElementsByTagName("head")[0] || docE, $ = doc.createElement("script"); $.type = "text/javascript"; $.text = A; _.appendChild($, _.firstChild); _.removeChild($) } }); fly.In = fly.inArray; lib.CacheHelper = function () { var $ = this, _ = {}; this.data = function (C, D, B) { var $ = typeof (C) == "string" ? C : fly.isObject(C) || fly.isFun(C) ? ui.DomHelper.getUniqueID(C) : C, A = _[$] || (_[$] = {}); if (B !== undefined) return A[D] = B; return A[D] }; this.removeData = function (A, B) { var $ = fly.isObject(A) || fly.isFun(A) ? ui.DomHelper.getUniqueID(A) : A; if (B == null) delete _[$]; else _[$]; delete myCache[B] }; this.queue = function (A, B, _) { B += ":queue"; var C = $.data(A, B); fly.isArray(C) ? C.push(_) : $.data(A, B, [_]) }; this.dequeue = function (_, B) { B += ":queue"; var $ = this.data(_, B), A = $.shift(); if (fly.isFun(A)) A.call(_) }; this.destroy = function () { $.destroy = null; for (var B in _) { for (var A in _[B]) _[B][A] = null; _[B] = null } _ = null; destroy(this); $ = null } }; lib.Cache = new lib.CacheHelper(); fly.lib.Function = fly.extend({ where: function (B, C) { B = fly.toFun(B, true); var _ = fly.isFun(B), $ = this, A = arguments.length > 1 ? slice.call(arguments, 1) : null; return function () { if (_ ? B.apply(this, arguments) : B) return $.apply(this, A || arguments) } }, bind: function (_, B) { var $ = this, A = arguments.length > 1 ? slice.call(arguments, 1) : null; return function () { return $.apply(_ || win, A || arguments) } }, format: function (params) { var old = this, sendArgs = slice.call(arguments, 0), needFormat = false; for (var i = 0; i < arguments.length; i++) if (fly.isString(arguments[i]) && /^@\{([\d\*\-\,]+)\}$/.test(arguments[i])) { needFormat = true; break } if (!needFormat) return function () { return old.apply(this, sendArgs) }; return function () { var args = [].concat(sendArgs); for (var i = 0; i < args.length; i++) { var arg = args[i], ms; if (fly.isString(arg) && (ms = arg.match(/^@\{([\d\*\-\,]+)\}$/))) { var str = ms[1]; if (/^\d+$/.test(str)) args[i] = arguments[str]; else { var as; if (str.indexOf(",") > -1) as = eval("[arguments[" + str.replace(/^,|,$/g, "").replace(/,+/g, "],arguments[") + "]]"); else { var start = 0, end; if (str.indexOf("-") > -1) { var parts = str.split("-"); start = parts[0]; end = parts[1] } as = slice.call(arguments, start, (parseInt(end) + 1) || 1000) } args.splice.apply(args, [i, 1].concat(as)); i += as.length - 1 } } } return old.apply(this, args) } }, timeout: function (B, _, C) { var $ = this, A = arguments.length > 2 ? slice.call(arguments, 2) : null; return $.handle = win.setTimeout(function () { delete $.handle; $.apply(_ == null ? this : _, A || arguments) }, B) }, clearTimeout: function () { if (this.handle) { win.clearTimeout(this.handle); delete this.handle } }, defer: function (B, _, D) { var $ = this, A = arguments.length > 2 ? slice.call(arguments, 2) : null, C = function () { var D = _ == null ? this : _; A = A || arguments; C.handle = $.handle = win.setTimeout(function () { delete C.handle; delete $.handle; $.apply(D, A) }, B) }; return C }, onBefore: function (B, A) { var $ = this; B = fly.toArray(B).select(fly.toFun); var _ = arguments.length > 1 ? slice.call(arguments, 1) : null; return function () { try { for (var C = 0; C < B.length; C++) B[C].apply(this, _ || arguments) } catch (A) { lib.Error.throwNotMessage(A, lib.Error.breakMessage) } return $.apply(this, arguments) } }, attachBefore: function ($, A, _) { if (!fly.isFun($[A])) throw new Error(A + "\u4e0d\u662f\u6709\u6548\u7684\u65b9\u6cd5"); return $[A] = $[A].onBefore.apply($[A], [this].concat(slice.call(arguments, 2))) }, onAfter: function (B, A) { var $ = this; B = fly.toArray(B).select(fly.toFun); var _ = arguments.length > 1 ? slice.call(arguments, 1) : null; return function () { var A = Function.result = Function.previousResult = $.apply(this, arguments); try { for (var D = 0; D < B.length; D++) B[D].apply(this, _ || arguments) } catch (C) { lib.Error.throwNotMessage(C, lib.Error.breakMessage) } return A } }, attachAfter: function ($, A, _) { if (!fly.isFun($[A])) throw new Error(A + "\u4e0d\u662f\u6709\u6548\u7684\u65b9\u6cd5"); return $[A] = $[A].onAfter.apply($[A], [this].concat(slice.call(arguments, 2))) }, inherit: function (B, _) { var $ = function () { }; $.prototype = fly.isFun(B) ? B.prototype : B; this.$base = fly.isFun(B) ? B : $; var A = new $(), C = this.prototype; this.prototype = A; fly.extend.apply(this, [this.prototype, C].concat(slice.call(arguments, 1))); this.prototype.constructor = this; return this }, extend: function ($) { fly.extend.apply(this, [this.prototype].concat(slice.call(arguments, 0))); return this }, parse: function ($) { if ($ instanceof this) return $; return new this($) } }, lib.Function); fly.safeExtend("$", Function.prototype, lib.Function); fly.lib.Date = fly.extend({ format: function (_) { _ = _ || "yyyy-MM-dd HH:mm:ss"; var $ = { "y+": this.getFullYear(), "M+": this.getMonth() + 1, "d+": this.getDate(), "H+": this.getHours(), "h+": this.getHours() % 12, "m+": this.getMinutes(), "s+": this.getSeconds(), "S+": this.getMilliseconds(), "W+": "\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d".charAt(this.getDay()), w: "\u65e5123456".charAt(this.getDay()) }; for (var A in $) _ = _.replace(new RegExp(A, "g"), function (_) { return $[A].toString().padLeft(_.length, "0") }); return _ } }, lib.Date); fly.safeExtend("$", Date.prototype, lib.Date); fly.lib.String = fly.extend({ formatReg: /\{([^{}]+)\}/g, format: function (params) { var args = arguments, lastArg = arguments[arguments.length - 1]; return this.replace(this.formatReg, function ($0, $1) { var v = args[$1]; if (v == undefined && lastArg) if (/[^\w$]/.test($1)) eval("v=lastArg." + $1); else v = lastArg[$1]; if (v == undefined) return ""; while (fly.isFun(v)) v = v.call(lastArg); return v }) }, contains: function ($, _) { return this.IndexOf($, _) > -1 }, IndexOf: function ($, _) { if ($ == null) return -1; return _ ? this.toUpperCase().indexOf($.toUpperCase()) : this.indexOf($) }, startWith: function ($, A) { if ($ == null) return false; var _ = this.substr(0, $.length); return A ? (_.toUpperCase() == $.toUpperCase()) : (_ == $) }, endWith: function ($, A) { if ($ == null) return false; var _ = this.substr(this.length - $.length); return A ? (_.toUpperCase() == $.toUpperCase()) : (_ == $) }, trim: function () { return this.replace(/(^\s+)|(\s+$)/g, "") }, trimLeft: function () { return this.replace(/^\s+/g, "") }, trimRight: function () { return this.replace(/\s+$/g, "") }, firstUpper: function () { return this.charAt(0).toUpperCase() + this.substr(1) }, repeat: function ($) { var _ = ""; while ($-- > 0) _ += this; return _ }, padLeft: function ($, _) { return (_ == null ? " " : _.toString()).$repeat($ - this.length) + this }, padRight: function ($, _) { return this + (_ == null ? " " : _.toString()).$repeat($ - this.length) }, before: function ($) { if ($ == null) return this; return $ + this }, after: function ($) { if ($ == null) return this; return this + $ }, camelCase: function (A) { var _ = this; if (A && $.isStr(A)) _ = _.replace(new RegExp("\\" + A + "\\w", "g"), function ($) { return $.charAt(1).toUpperCase() }); return _.charAt(0).toLowerCase() + _.substr(1) } }, lib.String); fly.safeExtend("$", String.prototype, lib.String); fly.lib.Error = fly.extend({ breakMessage: "@BREAKLOOP", continueMessage: "@CONTINUE", breakLoop: fly.breakLoop = function () { throw new Error(this.breakMessage) }, continueLoop: fly.continueLoop = function () { throw new Error(this.continueMessage) }, throwNotMessage: function (_, $) { if (_ == null || _.message != $) throw _ }, error: function ($) { throw $ } }, lib.Error); fly.lib.EventManager = function () { var _ = this; this.event = null; this.eventHash = {}; this.stopPropagationReturnValue = false; this.btnMap = browser.isIE ? { 1: 0, 4: 1, 2: 2} : (browser.isWebKit ? { 1: 0, 2: 1, 3: 2} : { 0: 0, 1: 1, 2: 2 }); var C = function (A) { var _ = A.indexOf("."), $ = ""; if (_ > -1) { $ = A.substr(_ + 1); A = A.substr(0, _) } return { type: $, eName: A} }, B = "type altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "), A = this.eventCls = function ($) { this.browserEvent = $; for (var _ = 0; _ < B.length; _++) this[B[_]] = $[B[_]] }; A.extend({ pageXY: function () { return { x: this.clientX + docE.scrollLeft + doc.body.scrollLeft, y: this.clientY + docE.scrollTop + doc.body.scrollTop} } }); this.setEvent = function ($) { if ($ == _.event || ($ && $.browserEvent) || $ == _.browserEvent) return $; win.$$event = fly.$$event = _.browserEvent = $; var A = fly.$event, B = fly.$event = win.$event = _.$event = new this.eventCls($); if (A && A != B) B.previous = A; if ($) { B.button = $.button ? this.btnMap[$.button] : ($.which ? $.which - 1 : -1); if ($.type == "click" && B.button == -1) B.button = 0; B.ctrlKey = $.ctrlKey || $.metaKey || false; B.keyCode = $.keyCode == undefined ? $.which : $.keyCode; B.target = $.srcElement || $.target } else { B.button = -1; B.shiftKey = false; B.ctrlKey = false; B.altKey = false; B.keyCode = 0; B.charCode = 0; B.target = null } return B }; this.restoreEvent = function ($) { fly.$event = win.$event = _.event = $; win.$$event = fly.$$event = _.browserEvent = $ ? $.browserEvent : null }; var $ = function (I, G, K, A, B) { var H = ui.DomHelper.getUniqueID(I), J = _.eventHash[H]; if (J == null) _.eventHash[H] = J = { el: I }; var D = C(G); G = D.eName; var $ = J[G]; if ($ == null) { J[G] = $ = new Array(); function F(A) { A = A || win.event; var B = _.setEvent(A); _.fire(I, G); try { _.restoreEvent(B.previous) } catch ($) { } return A.returnValue } $.root = F; if (G == "sizechange" && !browser.isIE) { var E = I.offsetWidth, L = I.offsetHeight; setInterval(function () { if (E != I.offsetWidth || L != I.offsetHeight) { E = I.offsetWidth; L = I.offsetHeight; F({ type: G }) } }, 300) } else if (I.attachEvent) I.attachEvent("on" + (G == "sizechange" ? "resize" : G), F); else if (I.addEventListener) I.addEventListener(G, F, false); else if (!(("on" + G) in I)) I["on" + G] = F } K = fly.toFun(K); $.unshift({ fn: K, scope: A, args: B, type: D.type }) }; this.on = function (M, J, P, D, F) { var G = fly.isObject(J); if (arguments.length == 2 && !G) return this.fire(M, J); G && (D = P); var L = G ? 3 : 4; F = arguments.length > L ? slice.call(arguments, L) : undefined; if (!fly.likeArray(M) && !G && !fly.likeArray(J) && !fly.likeArray(P)) { $(M, J, P, D, F); return this } var I = fly.toArray(M); if (G) for (var K = 0; K < I.length; K++) { var O = I[K]; for (var H in J) { P = J[H]; if (fly.likeArray(P)) for (var A = 0; A < P.length; A++) $(O, H, P[A], F); else $(O, H, P, F) } } else { var _ = fly.toArray(J), B = fly.toArray(P); for (var C = 0; C < I.length; C++) { O = I[C]; for (var E = 0; E < _.length; E++) { var N = _[E]; for (A = 0; A < B.length; A++) $(O, N, B[A], D, F) } } } return this }; this.bind = this.on; this.un = function (B, J, H) { if (fly.likeArray(B)) { for (var I = 0; I < B.length; I++) _.un(B[I], J, H); return B } if (fly.likeArray(J)) { for (I = 0; I < J.length; I++) _.un(B, J[I], H); return B } var $ = fly.DomHelper.getUniqueID(B), F = _.eventHash[$]; if (!F) return B; function G($, E, C, D) { if (fly.likeArray(E)) { for (var H = 0; H < E.length; H++) G($, E[H], D); return } if (E != null) E = fly.toFun(E); for (H = $.length - 1; H > -1; H--) if ((E == null || $[H].fn == E) && (D === "" || D == $[H].type)) { $[H] = null; $.splice(H, 1) } if ($.length == 0) { var A = F.el, B = F[C].root; if (B) { A.detachEvent && A.detachEvent("on" + C, B); if (A.removeEventListener) { try { A.removeEventListener(C, B) } catch (_) { } } if (A["on" + C] == B) A["on" + C] = null } F[C] = null; delete F[C] } } if (J == null) { for (var E in F) if (E != "el") G(F[E], H, E, "", true); F.el = null; _.eventHash[$] = null; delete _.eventHash[$] } else { var D = C(J), A = F[D.eName]; if (!A) return B; else G(A, H, D.eName, D.type) } return this }; this.fire = function (E, K, D, F) { _.stoped = false; if (fly.likeArray(E)) { for (var J = 0; J < E.length; J++) _.fire.apply(_, [E[J]].concat(slice.call(arguments, 1))); return E } if (fly.likeArray(K)) { for (J = 0; J < K.length; J++) _.fire.apply(_, [E, K[J]].concat(slice.call(arguments, 2))); return E } var H = _.eventHash[ui.DomHelper.getUniqueID(E)]; if (!H) return E; var G = C(K); K = G.eName; var A = H[K]; if (!A) return E; var $, F = arguments.length > 3 ? slice.call(arguments, 3) : null; for (J = 0; J < A.length; J++) { var I = A[J]; if (G.type === "" || G.type == I.type) { $ = I.fn.apply(I.scope == null ? (D == null ? E : D) : I.scope, F || I.args || [E, _.event]); try { if (E.nodeType) { if ($ == _.stopPropagationReturnValue) { lib.Event.stop(); break } else if (_.stoped || (_.browserEvent && _.browserEvent.cancelBubble)) break } else if ($ == _.stopPropagationReturnValue) break } catch (B) { } } } return $ }; this.stop = function () { var $ = _.$event, A = _.browserEvent; _.stoped = true; if ($) { $.cancelBubble = A.cancelBubble = true; $.returnValue = A.returnValue = false; if (A.stopPropagation) A.stopPropagation(); if (A.preventDefault) A.preventDefault() } return this == _ ? this : false }; this.createEventFn = function (_, $) { _ = _.replace(/^on/i, ""); _ = _.charAt(0).toLowerCase() + _.substr(1); return function () { if (arguments.length > 0) return this.on.apply(this, [_].concat(Array.prototype.slice.call(arguments, 0))); else if ($) return $.call(this); else this.fire(_) } }; this.registEvent = function (A, B) { var _ = fly.isFun(A) ? A.prototype : A; this.eventAble(_); B = fly.isString(B) ? [B] : B; for (var C = 0; C < B.length; C++) { var $ = B[C]; if (_[$] == null) _[$] = this.createEventFn($) } return this }; this.eventAble = function (A) { var $ = fly.isFun(A) ? A.prototype : A; if ($.eventAble) return this; if (!$.fire) $.fire = function () { return _.fire.apply(this, [this].$addRange(arguments)) }; if (!$.on) $.on = function () { return _.on.apply(this, [this].$addRange(arguments)) }; if (!$.un) $.un = function () { _.un.apply(this, [this].$addRange(arguments)); return this }; return this }; this.destroy = function () { _.destroy = null; for (var $ in _.eventHash) _.un(_.eventHash[$].el); destroy(_); _ = null } } .$inherit(lib.EventManager); fly.Event = fly.lib.Event = new lib.EventManager(); fly.onLoad = function (C, _, B) { if (doc.readyState == "complete" || doc.readyState == "loaded") { var A = slice.call(arguments, 2); setTimeout(function () { if ($.likeArray(C)) $.each(C, function () { return this.apply(_, A) }); else C.apply(_, A) }) } else fly.Event.on.apply(fly.Event, [win, "load"].concat(arguments)); return this }; fly.ready = function (A, $, _) { if (doc.readyState == "complete") return fly.onLoad.call(this, arguments); fly.initReady(); fly.doc.on.apply(fly.doc, ["_readycomplete"].concat(arguments)) }; fly.initReady = function () { if (fly.initReady.invoked) return; fly.initReady.invoked = true; var B = browser.isIE ? "readystatechange" : "DOMContentLoaded", $ = false, _ = 0, A = function () { if ($) return; $ = true; clearInterval(_); fly.doc.un(B); fly.doc.fire("_readycomplete"); fly.doc.un("_readycomplete") }; fly.doc.on(B, function () { if ((/loaded|complete/).test(document.readyState)) A() }); if (browser.isIE) _ = setInterval(function () { try { docE.doScroll("left"); A() } catch ($) { } }, 10) }; fly.onUnload = function ($) { fly.Event.on(win, "unload", arguments); return fly }; fly.onBeforeUnload = function ($) { fly.Event.on(win, "beforeunload", arguments); return fly }; fly.lib.JsonUtils = function () { var B = this, F = !!{}.hasOwnProperty, C = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, E = function ($) { return $ === 0 || $ == null || $ > 0 }, A = function ($, _) { $ = encodeURIComponent($); if (/["\\\x00-\x1f]/.test($)) return '"' + $.replace(/([\x00-\x1f\\"])/g, function (A, $) { var _ = C[$]; if (_) return _; _ = $.charCodeAt(); return "\\u00" + Math.floor(_ / 16).toString(16) + (_ % 16).toString(16) }) + '"'; if (E(_)) return '"' + $ + '"'; else return $ }, G = this.encodeArray = function (B, E) { var A = ["["], _, D, C = B.length, $; for (D = 0; D < C; D += 1) { $ = B[D]; switch (typeof $) { case "undefined": case "function": case "unknown": break; default: if (_) A.push(","); A.push($ === null ? "null" : fly.Json.encode($, E)); _ = true } } A.push("]"); return A.join("") }; this.encodeDate = function (_, A) { var $ = _.$format("yyyy-MM-dd hh:mm:ss"); return E(A) ? '"' + $ + '"' : $ }; this.encode = function (E, I) { var C = fly.isNumber(I) ? I + 1 : I; if (E == null) return "null"; else if (fly.likeArray(E)) return G(E, C); else if (fly.isDate(E)) return fly.Json.encodeDate(E, I); else if (fly.isString(E)) return A(E, I); else if (fly.isNumber(E) || fly.isBoolean(E)) return String(E); else { var D = ["{"], _, H, $; for (H in E) if (!F || (E.hasOwnProperty && E.hasOwnProperty(H))) { $ = E[H]; switch (typeof $) { case "undefined": case "function": case "unknown": break; default: if (_) D.push(","); D.push(B.encode(H), ":", $ === null ? "null" : this.encode($, C)); _ = true } } D.push("}"); return D.join("") } }; this.decode = function (_) { var A = _; try { if (fly.isString(_)) return win.eval("(" + _ + ")"); return _ } catch ($) { if (A == "") return ""; win.eval(A) } }, this.urlEncode = function (D, $, E, F) { var C = !!F; F = F || []; var _ = fly.likeArray(D), E = fly.isEmpty(E) ? "" : E; if (!fly.likeArray(D) && !fly.isObject(D)) { var A = B.encode(D, -1); if (C) F.push("&", E, "=", A); return A } fly.each(D, function (A, H) { var D = _ && !C ? A.value : A, G = E + encodeURIComponent(_ ? (!C ? A.name || A.id : "") : H); if ($ != false) if (fly.likeArray(D)) return fly.each(D, function () { B.urlEncode(this, $, G, F) }); else if (fly.isObject(D)) return fly.each(D, function (_, A) { B.urlEncode(this, $, G + "." + encodeURIComponent(A), F) }); F.push("&", G, "=", B.encode(D, -1)) }); if (C) return; if (F.length) F.shift(); return F.join("") }, this.urlDecode = function (B, D) { if (fly.isEmpty(B)) return {}; var C = {}, E, G, $, _, F, A; fly.each(B.split("&"), function () { E = this.split("="); G = decodeURIComponent(E[0]); F = C; A = G.split("."); while (A.length > 1) { G = A.shift(); F = F[G] = F[G] == null ? {} : F[G] } G = A[0]; $ = E[1]; if (D || !F[G]) F[G] = $; else if (fly.isArray(_ = F[G])) _[_.length] = $; else F[G] = [_, $] }); return C }; this.each = function ($, _, A) { return qp.each.apply($, slice.call(arguments, 1)) }; this.map = function ($, A, _) { return qp.select.apply($, slice.call(arguments, 1)) }; var D = {}, _ = {}, $ = /^[\w\$]+$/; this.getAccessor = function (_) { if (fly.isString(_)) { if (D[_]) return D[_]; var A; if ($.test(_)) A = function ($) { return $[_] }; else A = new Function("__o", "with(__o){return " + _ + "}"); return D[_] = A } else if (fly.isNumber(_)) return function ($) { return $[_] }; else if (fly.isFun(_)) return _; else return function () { return _ } }; this.setAccessor = function (A) { if (fly.isString(A)) { if (_[A]) return _[A]; var B; if ($.test(A)) B = function (_, $) { _[A] = $ }; else B = new Function("__o", "with(__o,__v){" + A + "=__v}"); return _[A] = B } else if (fly.isNumber(A)) B = function (_, $) { _[A] = $ }; else if (fly.isFun(A)) return A }; this.destroy = destroy } .$inherit(lib.JsonUtils); fly.Json = fly.lib.Json = new lib.JsonUtils(); var ajax = fly.lib.ajax = fly.ajax = function (_) { var $ = new ajax.Helper(_); if (arguments.length > 0 && fly.is(this, fly.lib.ajax) === false && $.autoLoad != false) return $.go(); return $ }; ajax.Option = { url: location.href, type: "GET", dataType: "", async: true, parameterName: "par_{0}", dataType: undefined, dataFilter: undefined, contentType: "application/x-www-form-urlencoded", charset: "GB2312", username: undefined, password: undefined, timeout: -1, data: undefined }; ajax.Helper = function ($) { this.option = fly.quickExtend({}, ajax.Option); this.setup($) }; ajax.Accepts = { xml: "application/xml, text/xml", html: "text/html", script: "text/javascript, application/javascript", json: "application/json, text/javascript", text: "text/plain", _default: "*/*" }; ajax.Eevents = ["onStart", "onError", "onSuccess", "onComplete", "onSend", "onStop", "onReadystatechange"]; fly.lib.Event.registEvent(ajax.Helper, ajax.Eevents); ajax.Helper.$extend({ option: null, setup: function (A) { if (A) { for (var B = 0; B < ajax.Eevents.length; B++) { var $ = ajax.Eevents[B], _ = $.charAt(2).toLowerCase() + $.substr(3); A[$] && this[$](A[$]); A[_] && this[$](A[_]) } fly.extend(this.option, A) } return this }, get: function () { this.option.type = "GET"; return this.go.apply(this, arguments) }, post: function () { this.option.type = "POST"; return this.go.apply(this, arguments) }, go: function (G, C, B) { var D = this.option; if (arguments.length > 0) { this.url(G); if (fly.isFun(C)) if (fly.isFun(B)) C = C.call(this); else { B = C; C = undefined } if (B) this.onSuccess(B); if (C) this.data(C) } G = D.url.replace(/#.*$/, ""); if (this.fire("start") === false) return this; this.parseSendData(); var E = D.type.toUpperCase() == "GET"; if (E) { if (D.dataEncode !== "") G += (G.indexOf("?") > -1 ? "&" : "?") + D.dataEncode; if (D.dataType === "script") return this.loadScript(G) } this.createConnecion(); var $ = this.connection; D.username != undefined ? $.open(D.type, G, D.async, D.username, D.password) : $.open(D.type, G, D.async); $.setRequestHeader("Content-Type", D.contentType); $.setRequestHeader("Charset", D.charset); if (!E) $.setRequestHeader("Content-Length", D.dataEncode.length); $.setRequestHeader("X-Requested-With", "XMLHttpRequest"); $.setRequestHeader("Accept", D.dataType && ajax.Accepts[D.dataType] ? ajax.Accepts[D.dataType] + ", */*" : ajax.Accepts._default); var _ = this.createContext(); $.onreadystatechange = _.stateChange; if (this.fire("send", this, $, D) === false) return this; if (D.timeout > 0) var A = new Date(), F = setInterval(function () { if (_.isComplete) clearInterval(F); else if ((new Date() - A) >= D.timeout) { clearInterval(F); _.isTimeout = "timeout"; _.conn.abort() } }, 10); $.send(E ? null : D.dataEncode); if (!D.async) { _.stateChange(); return this.getContent() } return this }, createContext: function () { var _ = { conn: this.connection, option: this.option, data: undefined, errMsg: undefined }, A = this, $ = _; $.complete = function () { A.fire("complete", this, $.conn, $.data, $.option.status); A.fire("stop", this, $.conn, $.option) }; $.stateChange = function () { A.fire("readystatechange", this, $.conn); if (!$.conn || $.conn.readyState === 0 || $.isTimeout === "abort") { if (!_.isComplete) $.complete(); $.isComplete = true; if ($.conn) $.conn.onreadystatechange = fly.emptyFun } if (!$.isComplete && $.conn && ($.conn.readyState === 4 || $.isTimeout == "timeout")) { _.isComplete = true; $.conn.onreadystatechange = fly.emptyFun; $.option.status = $.isTimeout === "timeout" ? "timeout" : !ajax.isSuccess($.conn) ? "error" : "success"; if ($.option.status === "success") { try { $.data = A.getContent() } catch (B) { $.option.status = "parsererror"; errMsg = B } } if ($.option.status === "success" || $.option.status === "notmodified") A.fire("success", A, $.data, $.option.status, $.conn); else A.fire("error", A, $.conn, $.option.status, $.errMsg); $.complete() } }; return $ }, loadScript: function (C) { var A = doc.getElementsByTagName("head")[0] || docE, _ = doc.createElement("script"); _.src = C; var B = this.option; if (B.charset) _.charset = B.charset; var $ = false; _.onload = _.onreadystatechange = function () { this.fire("readystatechange", this, _); if (!$ && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) { $ = true; this.fire("success", me, _); this.fire("complete", me, _, "success"); _.onload = _.onreadystatechange = null; if (_.parentNode) _.parentNode.removeChild(_) } }; A.appendChild(_); return undefined }, getContent: function () { var $ = this.connection, C = this.option, _ = C.dataType || $.getResponseHeader("content-type") || "", B = /xml/i.test(_), A = B ? $.responseXML : $.responseText; if (B && A && A.documentElement && A.documentElement.nodeName === "parsererror") fly.lib.Error.error(C.status = "parsererror"); if (C.dataFilter) A = C.dataFilter.call(this, A, C.dataType); if (typeof A === "string") if (/json/i.test(_)) A = fly.lib.Json.decode(A); else if (/script/i.test(_)) fly.globalEval(A); return A }, createConnecion: function () { if (win.XMLHttpRequest && (win.location.protocol !== "file:" || !win.ActiveXObject)) this.connection = new XMLHttpRequest(); else if (win.ActiveXObject) { try { this.connection = new ActiveXObject("Msxml2.XMLHTTP") } catch ($) { this.connection = new ActiveXObject("Microsoft.XMLHTTP") } } }, parseSendData: function () { var $ = this.option.data; if ($ == null) return this.option.dataEncode = ""; var C = this.option.jsonEncode ? "encode" : "urlEncode", A = []; if (fly.isObject($)) for (var _ in $) A.push(escape(_) + "=" + escape(fly.Json[C]($[_]))); else if (fly.likeArray($)) for (var B = 0; B < $.length; B++) A.push(escape(this.option.parameterName.$format(B)) + "=" + escape(fly.Json[C]($[B]))); return this.option.dataEncode = A.join("&") }, destroy: function () { this.destroy = null; destroy(this.option); destroy(this) } }); ajax.isSuccess = function (_) { try { var A = _.status; return !A && location.protocol === "file:" || (A >= 200 && A < 300) || A === 304 || A === 1223 || A === 0 } catch ($) { } return false }; fly.each(ajax.Option, function ($, _) { ajax.Helper.prototype[_] = function ($) { this.option[_] = $; return this }; ajax[_] = function (A) { var $ = fly.is(this, ajax.Helper) ? this : new ajax.Helper(); $[_].apply($, arguments); return $ } }); fly.each(ajax.Eevents, function ($) { ajax[$] = function (A) { var _ = fly.is(this, ajax.Helper) ? this : new ajax.Helper(); _[$].apply(_, arguments); return _ } }); fly.post = ajax.post = function () { var $ = new ajax.Helper(); return $.post.apply($, arguments) }; ajax.get = function () { var $ = new ajax.Helper(); return $.get.apply($, arguments) }; ajax.destroy = destroy; fly.lib.Cookie = fly.Cookie = fly.extend({ set: function (_, D, $, C, B, A) { C = C == null ? "/" : C; doc.cookie = _ + "=" + escape(D) + (($ == null) ? "" : ("; expires=" + $.toGMTString())) + ((C == null) ? "" : ("; path=" + C)) + ((B == null) ? "" : ("; domain=" + B)) + ((A == true) ? "; secure" : ""); return fly.lib.Cookie }, get: function (B, A) { var $ = doc.cookie; if (A != null) { var _ = $.search(new RegExp(B + "=", "gi")); if (_ < 0) return; $ = doc.cookie.substr(_ + B.length + 1).replace(/;.*/g, "") } else A = B; _ = $.search(new RegExp(A + "=", "gi")); if (_ < 0) return; $ = $.substr(_ + A.length + 1).replace(/&.*/g, ""); return unescape($) }, remove: function ($) { if (Cookies.get($)) doc.cookie = $ + "=" + "; expires=Thu, 01-Jan-70 00:00:01 GMT"; return fly.lib.Cookie } }, fly.lib.Cookie); fly.ui.StyleUtils = function () { var $ = this; this.loadCss = function (_) { var $ = doc.createElement("link"); $.rel = "stylesheet"; $.type = "text/css"; $.href = _; (doc.getElementsByTagName("head")[0] || docE).appendChild($); return $ }; this.defaultSheet = function () { return $.sheet || ($.sheet = $.createStyleSheet()) }; this.createStyleSheet = function (A) { var _; if (doc.createStyleSheet) { (_ = doc.createStyleSheet()).cssText = A; _.cssRules = _.rules } else { _ = doc.createElement("style"); _.type = "text/css"; try { _.innerHTML = A || "" } catch ($) { } (doc.getElementsByTagName("head")[0] || docE).appendChild(_); _ = _.sheet; _.rules = _.cssRules } return _ }; this.createCssRule = function (B, _, A) { try { B.addRule(_, A || " ") } catch ($) { B.insertRule("" + _ + " { " + A + " }", B.cssRules.length) } return B.rules[B.rules.length - 1] }; this.currentStyle = function ($) { return $.currentStyle || doc.defaultView.getComputedStyle($, null) }; this.checkValue = function ($, _) { if ((_ || _ === 0) && /width|height|top|left|right|bottom|margin|padding/i.test($)) { _ = _.toString(); if (_.indexOf("px") < 0 && _.indexOf("%") < 0) _ = _.replace(/[\d.]+/g, function ($) { return $ + "px" }) } return _ }; this.get = function (C, D) { var B = camelCase(D); if ($.setters[B]) return $.getters[B](C, D); var A = $.currentStyle(C), _ = A[B] || A[D]; if (!_ || _ == "auto" || /%$/.test(_)) if (D == "width") _ = C.offsetWidth; else if (D == "height") _ = C.offsetHeight; else if (D == "left") _ = C.offsetLeft; else if (D == "top") _ = C.offsetTop; return _ }; this.num = function (_, A) { return Number(($.get(_, A) + " ").replace(/[^\d-\.]/g, "")) || 0 }; this.set = function (A, B, C) { var _ = camelCase(B); if ($.setters[_]) $.setters[_](A, B, C); else if (C == null) A.style[fly.diffAttrs.styleRemoveMethod](_); else A.style[_] = $.checkValue(_, C); return $ }; this.getters = { opacity: function (A, B) { var _ = $.currentStyle(A), C = 100; (A.style.filter || "").replace(/alpha\([^)]*(\d+)[^)]*\)/, function (_, $) { C = parseInt($) }); return isNaN(C) ? 100 : C } }; this.setters = { opacity: function ($, _, A) { A = parseInt(A); $.style.filter = ($.style.filter || "").replace(/alpha\([^)]*\)/, "") + (isNaN(A) || isNaN == 100 ? "" : "alpha(opacity=" + A + ")") } }; if (browser.isFirefox || browser.isOpera) { this.getters.backgroundPositionX = function (_, A, B) { return $.get(_, "backgroundPosition").replace(/\s+.+$/, "") }; this.getters.backgroundPositionY = function (_, A, B) { return $.get(_, "backgroundPosition").replace(/^.+\s+/, "") }; this.setters.backgroundPositionX = function (_, A, B) { $.set(_, "backgroundPosition", B + " " + $.get(_, "backgroundPositionY")) }; this.setters.backgroundPositionY = function (_, A, B) { $.set(_, "backgroundPosition", $.get(_, "backgroundPositionX") + " " + B) } } } .inherit(ui.StyleUtils); fly.Style = fly.ui.Style = new ui.StyleUtils(); var styleHelper = fly.ui.Style; fly.ui.DomUtils = function () { var F = null, U = /^(?:br|frame|hr|img|input|link|meta|range|spacer|wbr|area|param|col)$/i, D = /^table|tbody|tr|td$/i, J, R = "afterbegin", P = "afterend", E = "beforebegin", T = "beforeend", C = "<table>", H = "</table>", S = C + "<tbody>", G = "</tbody>" + H, K = S + "<tr>", B = "</tr>" + G, M = /<([\w:]+)/, I = /^<(\w+)\s*\/?>(?:<\/\1>)?$/, A = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area: [1, "<map>", "</map>"], _default: [0, "", ""] }; A.optgroup = A.option; A.tbody = A.tfoot = A.colgroup = A.caption = A.thead; A.th = A.td; var Q = this; Q.uniqueNumber = 1; var O = doc.createElement("div"), _ = this.getDom = function ($) { return $.dom || $.single || ($.$isElement ? $[0] : $) }, L = this.getOuter = function ($) { while ($.getOuter) $ = $.getOuter(); while ($.outer && $.outer != $) $ = $.outer; return _($) }, N = this.getInner = function ($) { while ($.getInner) $ = $.getInner(); while ($.inner && $.inner != $) $ = $.inner; return _($) }; this.getUniqueID = function ($) { $ = $ == doc ? docE : $; return $.uniqueNumber != undefined ? $.uniqueNumber : ($.uniqueNumber = "$" + Q.uniqueNumber++) }; this.create = function (D) { if (D === "" || D == null) return; if (!fly.isString(D)) if (!fly.isString(D = fly.ifFun(D))) return D; var B = I.exec(D); if (B) return new Array(doc.createElement(B[1])); else if (!fly.isHtml(D)) return new Array(document.createTextNode(D)); var _, C = O, B = M.exec(D); if (B && (_ = A[B[1].toLowerCase()])) { C.innerHTML = _[1] + D + _[2]; var E = 0; while (E++ < _[0]) C = C.firstChild } else C.innerHTML = D; var $ = C.childNodes.length > 1 ? fly.toArray(C.childNodes) : new Array(C.childNodes[0]); for (E = C.childNodes.length - 1; E > -1; E--) C.removeChild(C.childNodes[E]); return $ }; this.doInsert = function (G, E, A, _) { var C; if (fly.likeArray(E)) { for (var F = 0; F < E.length; F++) C = arguments.callee(G, E[F], A, _); return C } if (fly.likeArray(A)) { for (F = 0; F < A.length; F++) C = arguments.callee(G, E, A[F], _); return C } var D = N(E); A = L(A); var $ = fly.isString(A); if (D.insertAdjacentElement) { var B = false; if (!$ && A.nodeName == "#text") if (G == "beforeend") { D.appendChild(A); B = true } else if (G == "afterbegin") { D.insertBefore(A); B = true } else { $ = true; A = A.nodeValue } if (B) C = A; else C = D[$ ? "insertAdjacentHTML" : "insertAdjacentElement"](G, A) } else { A = C = $ ? Q.create(A) : A; if (fly.likeArray(A)) { C = new Array(); fly.each(A, function ($) { C.push(Q.doInsert(G, D, $)) }) } else switch (G.toLowerCase()) { case "beforebegin": D.parentNode.insertBefore(A, D); break; case "afterbegin": D[D.firstChild ? "insertBefore" : "appendChild"](A, D.firstChild); break; case "beforeend": D.appendChild(A); break; case "afterend": if (D.nextSibling) D.parentNode.insertBefore(A, D.nextSibling); else D.parentNode.appendChild(A); break } } return _ == true ? C : fly(C) }; this.createTableHtml = function (B, C, A, $, _) { return "<table " + (A || "") + " >" + ("<tr " + ($ || "") + " >" + ("<td " + (_ || "") + "></td>").$repeat(C) + "</tr>").$repeat(B) + "</table>" }; this.createTable = function (B, C, A, $, _) { return Q.create(Q.createTableHtml(B, C, A, $, _)) }; this.insertBefore = function (_, A, $) { return Q.doInsert(E, _, A, $) }; this.insertAfter = function (_, A, $) { return Q.doInsert(P, _, A, $) }; this.insertFirst = function (_, A, $) { return Q.doInsert(R, _, A, $) }; this.append = function (_, A, $) { return Q.doInsert(T, _, A, $) }; this.children = function ($) { if ($.children || ($ == doc ? ($ = docE).children : false)) return $.children; return fly.toArray($.childNodes).where("o=>o.nodeType==1") }; this.moveContent = function (A, $) { var _; while (_ = A.childNodes[0]) $.appendChild(_); return A }; this.empty = function ($) { if ($) { var _; while (_ = $.childNodes[0]) $.removeChild(_) } }; this.changeClass = function (A, C, D) { if (A.isIList) { fly.each(A, function ($) { dh.changeClass($, C, D) }); return } var B = typeof (A) == "string", $ = B ? A : A.className, _ = C ? this.removeClass($, C) : $; _ = D ? this.addClass(_, D) : _; !B && _ != $ && (A.className = _); return _ }; this.addClass = function (A, C) { if (A.isIList) { fly.each(A, function ($) { dh.addClass($, C) }); return } var B = typeof (A) == "string"; if (!B && A.className == undefined) return C; var $ = (B ? A : A.className).replace(/^ +| +$/g, ""); if ($ == "") { B || (A.className = C); return C } var _ = " " + $ + " "; C.replace(/\S+/g, function ($) { if (_.indexOf(" " + $ + " ") < 0) _ += " " + $ }); _ = _.replace(/ +/g, " ").replace(/^ +| +$/g, ""); !B && _ != $ && (A.className = _); return _ }; this.removeClass = function (A, C) { if (A.isIList) { fly.each(A, function ($) { dh.removeClass($, C) }); return this } var B = typeof (A) == "string"; if (!B && A.className == undefined) return C; var $ = (B ? A : A.className).replace(/^ +| +$/g, ""); if ($ == "") return ""; var _ = " " + $.replace(/\s/g, "  ") + " "; C.replace(/\S+/g, function ($) { _ = _.replace(new RegExp("\\s" + $ + "\\s", "g"), " ") }); _ = _.replace(/ +/g, " ").replace(/^ +| +$/g, ""); !B && _ != $ && (A.className = _); return _ }; this.hasClass = function ($, _) { if (arguments.length == 1) _ = $, $ = this; if ($.isIList) $ = $.item(0); if ($) return (" " + $.className.replace(/\s+/g, " ") + " ").indexOf(" " + _ + " ") > -1; return false }; this.clone = function (_) { if (_.isIList) { var A = $.create(); _.each(function () { A.push(this.cloneNode(true)) }); return A } return _.cloneNode() }; this.toHtml = function ($) { if ($.isIList) return $.select(Q.toHtml).join(""); return $.outerHTML }; if (doc.compareDocumentPosition) this.contains = function (_, $) { return !!(_.compareDocumentPosition($) & 16) }; else this.contains = function (_, $) { return _ !== $ && (_.contains ? _.contains($) : true) }; this.focusable = function (_) { var $ = _; if ($.disabled) return false; var B = $.nodeName, A = Q.tabIndex($); if (!isNaN(A) || fly.foucsableTypeRegs.test(B) || (fly.clickableTypeRegs.test(B) && $.href)) if ([_]["AREA" == B ? "parents" : "closest"](":hidden").length == 0) return true; return false }; this.tabbable = function ($) { var _ = Q.tabIndex($); return (isNaN(_) || _ >= 0) && Q.focusable($) }; this.isVisible = function ($) { return styleHelper.get($, "visibility") !== "hidden" }; this.isDisplay = function ($) { return styleHelper.get($, "display") !== "none" }; this.isHidden = function ($) { return ($.nodeName === "INPUT" && $.type === "hidden") || !Q.isDisplay($) || !Q.isVisible($) }; this.tabIndex = fly.attrGeters.tabindex = function (_) { var $ = _.getAttributeNode("tabindex"); if ($ != null && $.specified) return $.value; return fly.foucsableTypeRegs.test(_.nodeName) || (fly.clickableTypeRegs.test(_.nodeName) && _.href) ? 0 : undefined }; this.unSelection = function () { try { if (document.selection) document.selection.empty(); else window.getSelection().removeAllRanges() } catch ($) { } } } .inherit(ui.DomUtils); fly.DomHelper = fly.ui.DomHelper = new ui.DomUtils(); dh = fly.ui.DomHelper; fly.collection.IList = fly.fn = qp = { allTypes: new Array(), extend: function (_, A) { var $ = _; if (fly.isString(_)) { $ = {}; $[_] = A } fly.extend(this, $); if (this == qp) fly.each(qp.allTypes, function () { fly.extend(this.prototype || this, $) }); return this }, applyTo: function (_, $) { if (this == qp) qp.allTypes.push(_); fly.safeExtend("$", _.prototype || _, this); for (var A = 1; A < arguments.length; A++) fly.extend(_.prototype || _, arguments[A]); _.prototype.$type = _; return this }, $type: null, $create: function ($) { return new this.$type($) }, isIList: true, getItems: function ($) { if (arguments.length == 1) { if ($.getItems) $ = $.getItems(); return fly.toArray($) } return this.items || this }, updateLength: function () { if (this.items) this.length = this.items.length; return this }, item: function ($) { return this.getItems()[$] }, selectMany: function (A, $, _) { this._select.__collect = function ($, _) { _ && $.merge(_) }; return this._select.apply(this, arguments) }, selectNotNull: function (A, $, _) { this._select.__collect = function ($, _) { _ && $.push(_) }; return this._select.apply(this, arguments) }, select: function (A, $, _) { this._select.__collect = function ($, _) { $.push(_) }; return this._select.apply(this, arguments) }, _select: function (R, D, L) { var U = arguments.callee.__collect, A = new Array(), P = this.getItems ? this.getItems() : this, S = fly.toFun(R, true), E = fly.isFun(S), J = arguments, T = J.length > 2; if (J.length > 11) var H = arrP.slice.call(J, 2); else if (T) var G = J[2], F = J[3], C = J[4], B = J[5], _ = J[6], $ = J[7], O = J[8], M = J[9], I = J[10]; if (fly.likeArray(P)) for (var N = 0, K = P.length; N < K; N++) { var Q = P[N]; U(A, E ? (T ? (H != null ? S.apply(D || Q, [Q, N, P].concat(H)) : S.call(D || Q, Q, N, P, G, F, C, B, _, $, O, M, I)) : S.call(D || Q, Q, N, P)) : S) } else for (N in P) { Q = P[N]; U(A, E ? (T ? (H != null ? S.apply(D || Q, [Q, N, P].concat(H)) : S.call(D || Q, Q, N, P, G, F, C, B, _, $, O, M, I)) : S.call(D || Q, Q, N, P)) : S) } return this.create ? this.create(A) : A }, take: function ($, B, _, A) { this.___count = $; this.___isAsc = B; return (this.___take || qp.___take).apply(this, arrP.slice.call(arguments, 2)) }, ___take: function (I, S) { var V = this.getItems ? this.getItems() : this, _ = new Array(); if (V.length > 0) { var D = this.___count; D = D == null ? 100000000000 : (D < 0 ? this.length + D : D); var P = this.___isAsc, T = this.___isNot == true, Q = arguments, L = Q.length > 1; if (Q.length > 11) var H = arrP.slice.call(Q, 1); else if (L) var G = Q[1], F = Q[2], E = Q[3], C = Q[4], B = Q[5], A = Q[6], $ = Q[7], K = Q[8], J = Q[9], R = Q[10]; var M = fly.toFun(I, true); if (M === undefined) M = true; var O = fly.isFun(M), X = P != false ? 1 : -1; for (var U = (P != false ? 0 : V.length - 1), N = (P != false ? V.length : -1); U != N && _.length < D; U += X) { var W = V[U]; if (T ^ !!(O ? (L ? (H != null ? M.apply(W, [W, U, V].concat(H)) : M.call(W, W, U, V, G, F, E, C, B, A, $, K, J, R)) : M.call(W, W, U, V)) : M)) _.push(W) } } delete this.___count; delete this.___isAsc; delete this.___isNot; return this.create ? this.create(_) : _ }, each: function (P, B, I) { var Q = fly.toFun(P, true); if (!fly.isFun(Q)) return this; var H = arguments, R = H.length > 1; if (H.length > 11) var F = arrP.slice.call(H, 2); else if (R) var E = H[2], D = H[3], C = H[4], A = H[5], _ = H[6], $ = H[7], L = H[8], J = H[9], G = H[10]; var N = this.getItems ? this.getItems() : this; if (fly.likeArray(N)) for (var K = 0; K < N.length; K++) { var O = N[K], M; if (!R) M = Q.call(B || O, O, K, N); else if (F != null) M = Q.apply(B || O, [O, K, N].concat(F)); else M = Q.call(B || O, O, K, N, E, D, C, A, _, $, L, J, G); if (M == fly.BREAK) break } else for (K in N) { O = N[K]; if (!R) M = Q.call(B || O, O, K, N); else if (F != null) M = Q.apply(B || O, [O, K, N].concat(F)); else M = Q.call(B || O, O, K, N, E, D, C, A, _, $, L, J, G); if (M == fly.BREAK) break } return this }, uniquelize: function (_) { var $ = new Array(); this.$each(function (A) { if (!$.contains(A, _)) $.push(A) }); return this.create ? this.create($) : $ }, notIn: function (_, $) { return this.where(function (A) { return _.indexOf(A, 0, $) < 0 }) }, intersect: function (_, $) { return this.where(function (A) { return _.indexOf(A, 0, $) > -1 }) }, toJson: function (B, A) { var $ = {}; B = fly.toFun(B, true); A = fly.toFun(A, true); if (B == null && A == null) { var _ = this.getItems(); arrP.push.apply({}, _); return $ } this.$each(function (C, F, E) { var _, D = B == null ? F : B.call(C, C, F, E); if (D == fly.BREAK || (_ = A == null ? C : A.call(C, C, F, E) == fly.BREAK)) return fly.BREAK; $[D] = _ }); return $ }, on: function ($, A, _) { fly.Event.on.apply(fly.Event, [this.getItems()].merge(arguments)); return this }, un: function ($, _) { fly.Event.un.apply(fly.Event, [this.getItems()].merge(arguments)); return this }, fire: function ($, _) { fly.Event.fire.apply(fly.Event, [this.getItems()].merge(arguments)); return this }, add: function ($) { return this.addRange($) }, addRange: function ($) { var _ = this.getItems(); arrP.push.apply(_, fly.likeArray($) ? fly.toArray($) : arguments); this.updateLength(); return this }, insert: function ($, _) { if (arguments.length > 1) { var A = this.getItems(); arrP.splice.apply(A, [$ < 0 ? A.length + $ : $, 0].concat(fly.likeArray(_) ? fly.toArray(_) : arrP.slice.call(arguments, 1))); this.updateLength() } return this }, remove: function ($, _) { if (arguments.length > 0) { if (fly.likeArray($)) { var C = fly.toArray($).uniquelize(); C.sort(); for (var B = C.length - 1; B > -1; B--) this.remove(C[B]) } else { var A = this.getItems(); $ = $ < 0 ? A.length + $ : $; A[$] = null; arguments.length > 1 ? arrP.splice.apply(A, [$, 1].concat(_)) : arrP.splice.call(A, $, 1) } this.updateLength(); return this } else this.$each(function ($) { if ($ && $.parentNode) $.parentNode.removeChild($) }); return this }, indexOf: function (A, _, B, $) { var C = this.getItems ? this.getItems() : this; $ = $ ? fly.toFun($) : null; _ = B || 0; B = B || C.length - 1; for (var D = _; D <= B; D++) if ($ == null ? C[D] == A : $.call(C[D], C[D], A, C)) return D; return -1 }, lastIndexOf: function (A, _, B, $) { var C = this.getItems ? this.getItems() : this; $ = $ ? fly.toFun($) : null; _ = B || 0; B = B || C.length - 1; for (var D = B; D >= _; D--) if ($ == null ? C[D] == A : $.call(C[D], C[D], A, C)) return D; return -1 }, findIndex: function (A, _, B, $) { var C = fly.toFun(A); return this.indexOf(null, _, B, function (A, _, B) { var D = C.call(A, A); return $ ? $.call(A, A, D, B) : D }) }, findLastIndex: function (A, _, B, $) { var C = fly.toFun(A); return this.lastIndexOf(null, _, B, function (A, _, B) { var D = C.call(A, A); return $ ? $.call(A, A, D, B) : D }) }, contains: function (A, _, $) { return this.indexOf(A, _, $) > -1 }, copyTo: function ($, _) { arrP.splice.apply(_ || (_ = new Array()), [$, 0].concat(this.getItems())); return _ }, copy: function (_, A) { var $ = arrP.slice.apply(this.getItems(), [_ || 0, A == null ? this.length : A]); return this.create ? this.create($) : $ }, merge: function ($) { var _ = this.getItems(); for (var A = 0; A < arguments.length; A++) arrP.push.apply(_, qp.getItems(arguments[A])); return this }, setAttr: function ($) { this.$each(function (_) { fly.set(_, $) }); return this }, css: function ($, _) { if (this.length == 0) return this; if (arguments.length == 1 && fly.isString($)) return styleHelper.get(this.item(0), $); if (arguments.length > 1) this.$each(function (A) { styleHelper.set(A, $, _) }); else this.$each(function (A) { for (var _ in $) styleHelper.set(A, _, $[_]) }); return this }, numCss: function (_) { var $ = Number((this.css(_) + " ").replace(/[^\d-\.]/g, "")); return isNaN($) ? $ : 0 }, data: function ($, _) { if (arguments.length == 1 && fly.isString($)) return this.length == 0 ? null : this.item(0)[$]; if (arguments.length > 1) this.$each(function (A) { this[$] = _ }); else this.$each(function (A) { for (var _ in $) A[_] = $[_] }); return this }, attr: function ($, _) { if (arguments.length == 1 && fly.isString($)) return this.length == 0 ? null : fly.attr(this.item(0), $); if (arguments.length > 1) this.$each(function (A) { fly.attr(A, $, _) }); else this.$each(function (A) { for (var _ in $) fly.attr(A, _, $[_]) }); return this }, removeAttr: function ($) { this.each(function () { if (this.removeAttribute) { try { this.removeAttribute($) } catch (_) { } } try { delete this[$] } catch (_) { } }); return this }, values: function (_, D) { var B = this.filter(":input").merge(this.find(":input")); if (_ && !fly.isBoolean(_)) { B.each(function () { var A = this.name || this.id; if (A in _) $.value(this, _[A]) }); return this } else { var C = {}, A; B.each(function () { var E = this.name || this.id, B = this.type; if (!E || (D != false && this.disabled) || /file|undefined|reset|button/i.test(B)) return; if ((/radio|checkbox/i.test(B) && !this.checked) || (B == "submit" && A)) return; A = A || B == "submit"; var $ = fly.value(this); if (_ === true) C[E] = fly.likeArray($) ? $[$.length - 1] : $; else E in C ? (fly.isArray(C[E]) ? C[E].push($) : C[E] = [C[E], $]) : C[E] = $ }); return C } }, value: function ($) { if (arguments.length == 0) { var _ = this.getItems()[0]; return _ ? fly.value(_) : null } this.each(function (_, A) { fly.value(this, $); return this }) }, serialize: function () { return fly.lib.Json.urlEncode(this.values()) }, hasChild: function (_) { _ = $(_); return this.first(function ($) { return _.first(function (_) { return !ui.DomHelper.contains($, _) }).length != 0 }).length == 0 }, hasParent: function (_) { return $(_).isChild(this) }, changeClass: function ($, _) { dh.changeClass(this, $, _); return this }, addClass: function ($) { dh.addClass(this, $); return this }, removeClass: function ($) { dh.removeClass(this, $); return this }, hasClass: function (_) { var $ = this.item(0); if ($) return dh.hasClass($, _); return false }, toHtml: function () { return dh.toHtml(this) }, clone: function () { return dh.clone(this) }, rect: function () { var $ = this.item(0), A = { top: $.offsetTop, left: $.offsetLeft, width: $.offsetWidth, height: $.offsetHeight }, _ = $.getBoundingClientRect ? $.getBoundingClientRect() : ($.getClientRects ? $.getClientRects() : null); if (_) { A.top = _.top; A.left = _.left; return A } while (box = box.offsetParent) { A.top += box.offsetTop; A.left += box.offsetLeft } return A }, pos: function () { return { left: parseInt(this.left()) || 0, top: parseInt(this.top()) || 0, bottom: parseInt(this.bottom()) || 0, right: parseInt(this.right()) || 0} }, offset: function () { var $ = this.item(0); return { height: $.offsetHeight, width: $.offsetWidth, left: parseInt(this.left()) || $.offsetLeft, top: parseInt(this.top()) || $.offsetTop, bottom: parseInt(this.bottom()) || 0, right: parseInt(this.right()) || 0} }, size: function () { return { width: parseInt(this.width()) || this.item(0).offsetWidth, height: parseInt(this.height()) || this.item(0).offsetHeight} }, blur: function ($, _) { if (fly.isNumber($) || arguments.length == 0) return this.$each(function () { var A = this; if ($ != null) setTimeout(function () { A.blur && A.blur(); _ && _.call(A, A) }, $); else { A.blur && A.blur(); _ && _.call(A, A) } }); else return this.on.apply(this, arrP.concat.apply(["blur"], arguments)) }, focus: function ($, _) { if (fly.isNumber($) || arguments.length == 0) return this.$each(function () { var A = this; if ($ != null) setTimeout(function () { A.focus && A.focus(); _ && _.call(A) }, $); else { A.focus && A.focus(); _ && _.call(A) } }); else return this.on.apply(this, arrP.concat.apply(["focus"], arguments)) }, zIndex: function (_) { if (arguments.length > 0) return this.css("zIndex", _); var A = this.first(), B, $ = 0; while (A.length && A[0] !== doc) { B = A.css("position"); if (B == "absolute" || B == "relative" || B == "fixed") { $ = parseInt(A.css("zIndex")); if (!isNaN($) && $ != 0) return $ } A = A.parent() } return 0 }, focusable: function () { if (this.length == 0) return false; return dh.focusable(this.item(0)) }, tabbable: function () { if (this.length == 0) return false; return dh.tabbable(this.item(0)) }, append: function (_, $) { dh.append(this, _); return this }, appendTo: function (_, $) { dh.append(_, this); return this }, empty: function (_, $) { return this.$each(function ($) { dh.empty($) }) }, before: function ($) { dh.insertBefore(this, $); return this }, after: function ($) { dh.insertAfter(this, $); return this }, insertBefore: function ($) { dh.insertBefore($, this); return this }, insertAfter: function ($) { dh.insertAfter($, this); return this }, end: function () { return this.context || new Array() }, destroy: function () { var $ = this.getItems(); for (var _ = $.length - 1; _ > -1; _--) { $[_] = null; arrP.pop.call($) } this.items = this.all = null } }; (function () { var _ = docE.style, B = function ($) { return function (_) { return arguments.length > 0 ? this.css($, _) : this.css($) } }; if (browser.isSafari || browser.isChrome) { _ = doc.defaultView.getComputedStyle(docE); for (var C = 0; C < _.length; C++) { var A = camelCase(_[C]); if (A.charAt(0) != "-" && !qp[A]) qp[A] = B(A) } _ = "border,borderWidth,borderColor,borderStyle,margin,padding,font".split(","); for (C = 0; C < _.length; C++) qp[A] = B(A) } else for (A in _) if (!qp[A]) qp[A] = B(A); var $ = ui.Style.num; fly.each(["Height", "Width"], function (A) { var _ = A == "Width" ? "Left" : "Top", C = A == "Width" ? "Right" : "Bottom"; qp["inner" + A] = function () { return this[A.toLowerCase()]() + $(this, "padding" + _) + $(this, "padding" + C) }; qp["outer" + A] = function (B) { return this["inner" + A]() + $(this, "border" + _ + "Width") + $(this, "border" + C + "Width") + (B ? $(this, "margin" + _) + $(this, "margin" + C) : 0) }; var B = A.toLowerCase(); qp[B] = function (_) { var $ = this.item(0); if ($ == win) return doc.compatMode == "CSS1Compat" && docE["client" + A] || doc.body["client" + A]; if ($ == doc) return Math.max(docE["client" + A], doc.body["scroll" + A], docE["scroll" + A], doc.body["offset" + A], docE["offset" + A]); if (_ === undefined) return (this.length ? ui.Style.get(this[0], B) : null); else return this.css(B, fly.isString(_) ? _ : _ + "px") } }) })(); fly.extend(qp, { ready: fly.ready, val: qp.value, disable: qp.attr.$format("disabled", true), enable: qp.attr.$format("disabled", false), hide: qp.css.$format("display", "none"), show: function () { var $ = this.css("display"); if ($ == "none") this.css("display", ""); $ = this.css("visibility"); if ($ == "hidden") this.css("visibility", ""); return this }, map: qp.select, any: function ($, _) { if (arguments.length == 0) return (this.getItems || qp.getItems).call(this).length; this.___count = 1; return (this.___take || qp.___take).apply(this, arguments).length > 0 }, all: function ($, _) { if (arguments.length == 0) return (this.getItems || qp.getItems).call(this); this.___count = 1; this.___isNot = true; return (this.___take || qp.___take).apply(this, arguments).length == 0 }, where: function ($, _) { return (this.___take || qp.___take).apply(this, arguments) }, aggregate: function ($, _) { if (arguments.length == 1) _ = $, $ = null; _ = fly.toFun(_ || $); this.each(function (B, C, A) { $ = _.call(this, $, B, C, A) }); return $ }, sum: function ($) { var _ = 0; if ($ != null) $ = fly.toFun($); this.each(function (B, C, A) { _ += $ == null ? B : $.apply(this, arguments) }); return _ }, compareOne: function ($, F, D) { var C, B, E = D; if ($ != null) $ = fly.toFun($); if (F != null) F = fly.toFun(F, true); if (F != null && !fly.isFun(F)) return F; var A = fly.isFun(E), G = fly.isBoolean(E), _ = E === true, H = E === false; this.each(function (H, I, F) { var D = $ == null ? H : $.apply(this, arguments); if (G) { if (!(C === undefined || (_ ? D > C : D < C))) return } else if (!(A ? E.apply(this, D, C, B) : D == E)) return; C = D, B = H }); if (C === undefined) return; return F == null ? B : F.apply(B, B, C, this) }, max: function ($, _) { return this.compareOne($, _, true) }, min: function ($, _) { return this.compareOne($, _, false) }, average: function ($) { return this.sum.apply(this, arguments) / this.length }, count: function ($, _) { return this.where.apply(this, arguments).length }, distinct: qp.uniquelize, groupBy: function (A, $) { var _ = {}; A = fly.toFun(A); $ = fly.toFun($); this.each(function (D, F, C) { var E = A == null ? F : A.apply(this, arguments), B = $ == null ? D : $.apply(this, arguments); (_[E] || (_[E] = new Array())).push(B) }); return _ }, clear: function () { var $ = this.getItems(); arrP.splice.call($, 0, this.length); this.updateLength(); return this }, first: function (_, A) { if (arguments.length == 0) { var B = (this.getItems || qp.getItems).call(this), $ = new Array(); if (B.length > 0) $[0] = B[0]; return this.create ? this.create($) : $ } this.___count = 1; return (this.___take || qp.___take).apply(this, arguments) }, last: function (_, A) { if (arguments.length == 0) { var B = (this.getItems || qp.getItems).call(this), $ = new Array(); if (B.length > 0) $[0] = B[B.length - 1]; return this.create ? this.create($) : $ } this.___count = 1; this.___isAsc = false; return (this.___take || qp.___take).apply(this, arguments) }, index: qp.indexOf, lastIndex: qp.lastIndexOf, children: function ($) { return this.$(">" + ($ || 1)) }, next: function ($) { return this.$("+" + (layers || 1)) }, previous: function ($) { return this.$("&" + (layers || 1)) }, sibling: function () { return this.$("~" + (layers || 1)) }, hover: function ($, A, _) { if ($) this.mouseenter.apply(this, [$].concat(slice.call(arguments, 1))); if (A) this.mouseout.apply(this, slice.call(arguments, 1)); return this } }); (function () { qp.avg = qp.average; qp.slideUp = qp.hide; qp.sildeDown = qp.show; var A = { minWidth: "width", minHeight: "height" }; for (var C in A) if (!qp[C]) qp[C] = qp[A[C]]; var E = ["disabled", "id", "name", "title", "className", "text:innerText", "html:innerHTML"]; for (var F = 0; F < E.length; F++) { var B = E[F].replace(/.*:/g, ""); qp[E[F].replace(/:.*/g, "")] = function ($) { return function (_) { return arguments.length > 0 ? this.attr($, _) : this.attr($) } } (B) } qp.bind = qp.on; fly.Event.events = ("Blur,Focus,Load,Resize,Scroll,Unload,Click,DblClick,ContextMenu," + "MouseDown,MouseUp,MouseMove,MouseOver,MouseOut,MouseEnter,MouseLeave," + "Change,Select,SelectStart,Submit,KeyDown,KeyPress,KeyUp,Error").split(","); for (F = 0; F < fly.Event.events.length; F++) { var $ = fly.Event.events[F], _ = $.toLowerCase(), D = qp["on" + $] = function ($) { return function () { return this.on.apply(this, arrP.concat.apply([$], arguments)) } } (_); if (!qp[_]) qp[_] = D } })(); qp.applyTo(Array, { item: function ($) { return this[$] }, filter: qp.filter, $type: Array, $create: fly.toArray, getItems: fly.emptyFun, updateLength: fly.emptyFun }); lib.Single = function ($) { this.single = this[0] = fly.likeArray($) ? $[0] : $ }; qp.applyTo(lib.Single, { length: 1, single: null, item: function ($) { return single }, getItems: function () { return new Array(this.single) }, updateLength: fly.emptyFun, destroy: function () { this.single = null; this[0] = null } }); fly.safeExtend("$", qp, qp); fly.ui.Animate = fly.Class({ base: lib.Component, _handle: 0, constructor: function ($) { fly.extend(this, $); this.config = $; lib.Animate.baseClass.constructor.apply(this, arguments) }, current: 0, play: function () { if (this.running) return false; var _ = this.speed || this.config.speed, _ = parseInt((lib.Animate.Speed[_] || _ || lib.Animate.Speed.normal) / 20), $ = parseInt(this.start || this.config.start || (this.getter || this.config.getter || this.achieve || this.config.achieve)(this.target, this.attr)); this._step = this.step || this.config.step || ((this.end || this.config.end - $) / 20); this.current = $; if (fly.Event.fire(this, "play") == false) return false; win.clearTimeout(this._handle); this.running = true; if (this.attr == "opacity") { var A = ui.Style.get(this.target, "zoom"); if (A == null || A == "normal") ui.Style.set(this.target, "zoom", 1) } var B = this; this._handle = win.setInterval(function () { B.go() }, _) }, go: function () { win.status = this.current; this.achieve.call(this, this.target, this.attr, this.current, this.data || this.config.data); var $ = this.end || this.config.end; if (this._step > 0 ? this.current >= $ : this.current <= $) { fly.Event.fire(this, "end"); this.stop(); return } if (fly.Event.fire(this, "go") == false) return false; this.current += this._step; if (this._step > 0 ? this.current > $ : this.current < $) this.current = $ }, stop: function () { win.clearTimeout(this._handle); fly.Event.fire(this, "stop"); this.running = false; if (this.callback) this.callback.call(this) } }); fly.ui.Animate.Speed = { slow: 300, normal: 200, fast: 100 }; fly.ui.Effect = { style: styleHelper.set }; qp.extend({ animate: function (C, _, B) { var D, $; for (var A in C) D = A, $ = parseInt(C[D]); return qp.$each.call(this, function (C) { var E = "animate " + D + ":" + $, A = lib.Cache.data(C, E) || lib.Cache.data(C, E, new fly.ui.Animate({ target: C, achieve: fly.ui.Effect.style, attr: D, getter: styleHelper.num })); A.speed = _; A.end = $; A.callback = B; A.play() }) }, parseFadeArgs: function ($, _) { return fly.isObject($) ? $ : { speed: $, callback: _} }, fadeOut: function ($, _) { var A = this.$parseFadeArgs.apply(this, arguments); return qp.$each.call(this, function (B) { var $ = new fly.ui.Animate(B, fly.ui.Effect.style, fly.extend({ start: 100, end: 0 }, A)); if (fly.isFun(_)) $.on("end", _); $.on("end", function ($) { this.hide(); this.css("opacity", 100) } .bind(this)); $.play() }) }, fadeIn: function ($, _) { var A = this.$parseFadeArgs.apply(this, arguments); return qp.$each.call(this, function (B) { this.show(); var $ = new fly.ui.Animate(B, fly.ui.Effect.style, fly.extend({ start: 0, end: 100 }, A)); if (fly.isFun(_)) $.on("end", _); $.play() }) }, fadeTo: function (_, $, A) { var B = this.$parseFadeArgs(_, A); B.end = $ < 1 ? $ * 100 : $; return qp.$each.call(this, function (C) { var $ = parseInt(ui.Style.get(this[0], "opacity")), _ = new fly.ui.Animate(C, fly.ui.Effect.style, fly.extend({ start: $ == 0 ? 0 : $ || 100 }, B)); if (fly.isFun(A)) _.on("end", A); if (B.end === 0) _.on("end", function () { this.hide(); this.css("opacity", 100) }); _.play() }) } }); (function () { var eFunsCache = {}, nsSelector = fly.ns("fly.ui.selector"), hasQueryMethod = !!doc.querySelector, checkDiv = doc.createElement("div"), engine, rSelectors, utils = { propMap: { "class": "className" }, trimCommaReg: /^[\s\,]*\,+|\,+[\s\,]*$/g, expressionInnerReg: /^\s*([\w$]+)\s*([=><*!\^\$]+)([\s\S]+)*/, expressionOuterReg: /\s*(\[[^\[\]]+\])/g, trimQuotationReg: /^\s*['"]?|['"]?\s*$/g, trimMiddleBrackets: /^\s*\[|\]\s*$/g, verySimpleReg: /[\[\]\(\)\s><+]/, containsReg: /:contains\(\s*(\'[^\']*\'|\"[^\"]*\")\s*\)/g, headerTags: ["h1", "h2", "h3", "h4", "h5", "h6"], inputTags: ["input", "textarea", "select", "button"], inputTypes: ["text", "checkbox", "radio", "image", "file", "submit", "reset", "password", "button", "hidden"], relationSelectorReg: /[+\-<>~]/, relationSelectorRegReplace: /([+\&<>~]+)(\d*)/g, getByTagPropFilter: function ($, A, _) { return function (F, C, B) { var D = { selector: $, onlyFilterContext: B.onlyFilterContext }; if (A == null) return executors.byTagName(F, C, D); var E = new nsSelector.Collector(); executors.byTagName(F, E, D); fly.each(E.result, function ($) { if ($[A] == _) C.result.push($) }) } }, getCommonFilter: function ($) { $ = fly.toFun($); return function (B, A, _, D) { if (!_.onlyFilterContext) { var C = new nsSelector.Collector(); executors.all(B, C, { onlyFilterContext: false }); B = C.result } $(B, A, _) } }, getSimpleOperator: function ($) { return fly.toFun("o,left, right=>o[left] " + $ + " right") } }; nsSelector.Collector = function ($, _) { this.result = $ || new Array(); this.unique = _; if (_ && this.result.length > 0) this.result = this.uniquelize() } .extend({ allID: ",", uniquelize: function (_, C) { if (this.result.length < 2) return; var B = this.result, D = -1, A = B.length; this.allID = ","; _ = _ || 0; C = C == null ? A : C; while (++D < A) { var $ = B[D].uniqueNumber || ui.DomHelper.getUniqueID(B[D]); if (D >= _ && D < C && this.allID.indexOf("," + $ + ",") > -1) { B.splice(D, 1); D--, A--; continue } this.allID += $ + "," } }, merge: function ($) { if ($.length == 0) return; this.result.length == 0 ? this.result = fly.toArray($) : this.result.merge($); if (this.unique) this.uniquelize() }, push: function (_) { if (this.unique) { var $ = _.uniqueNumber || ui.DomHelper.getUniqueID(_); if (this.allID.$contains("," + $ + ",")) return false; this.allID += $ + "," } this.result.push(_); return true }, contains: function ($) { if (this.unique) return this.allID.$contains("," + $.uniqueNumber || ui.DomHelper.getUniqueID($) + ","); return this.result.$contains($) }, clear: function () { this.result = new Array(); this.allID = "," } }).extend(nsSelector.Collector); var executors = { _all: function (_) { if (_.all) return _.all; else if (_.getElementsByTagName) return _.getElementsByTagName("*"); else { var $ = new Array(); (function ($, _) { var B = ui.DomHelper.children($); if (B != null) for (var A = 0; A < B.length; A++) arguments.callee(_.push(B[A]), _) })(_, $); return $ } }, all: function (A, _, $) { if ($.onlyFilterContext) return _.merge(A); for (var B = 0; B < A.length; B++) _.merge(executors._all(A[B])) }, byId: function (E, _, $) { var B = $.selector; for (var G = 0; G < E.length; G++) { var C = E[G]; if ($.onlyFilterContext) { if (C.id == B) _.result.push(C) } else if (C.getElementById) { var A = C.getElementById(B); if (A) _.result.push(A) } else { var F = executors._all(C), D = -1; while (++D < F.length) if (F[D].id == B) return _.result.push(F[D]) } } }, byCss: function (D, _, $) { var A = new RegExp("\\s" + $.selector + "\\s"); for (var F = 0; F < D.length; F++) { var B = D[F]; if ($.onlyFilterContext) { if (A.test(" " + B.className + " ")) _.result.push(B) } else { var E = executors._all(B), C = -1; while (++C < E.length) if (A.test(" " + E[C].className + " ")) _.result.push(E[C]) } } }, byName: function (D, _, $) { var A = $.selector; for (var F = 0; F < D.length; F++) { var B = D[F]; if ($.onlyFilterContext) { if (B.name == A) _.result.push(B) } else if (B.getElementsByName) _.merge(B.getElementsByName(A)); else { var E = executors._all(B), C = -1; while (++C < E.length) if (E[C].name == A) _.result.push(E[C]) } } }, byTagName: function (D, _, $) { var A = $.selector; if (fly.isArray(A)) { for (var F = 0; F < A.length; F++) arguments.callee(D, _, { selector: A[F], onlyFilterContext: $.onlyFilterContext }); return } A = A.toUpperCase(); for (F = 0; F < D.length; F++) { var B = D[F]; if ($.onlyFilterContext) { if (B.nodeName == A) _.result.push(B) } else if (B.getElementsByTagName) _.merge(B.getElementsByTagName(A)); else { A = A.toUpperCase(); var E = executors._all(B), C = -1; while (++C < E.length) if (E[C].nodeName == A) _.result.push(E[C]) } } }, clear: function (A, _, $) { _.clear() }, expression: function (context, collector, selector) { var all; if (selector.onlyFilterContext) all = context; else { var ac = new nsSelector.Collector(); executors.all(context, ac, { onlyFilterContext: false }); all = ac.result } var exp = selector.selector.replace(utils.trimMiddleBrackets, "").$trim(); if (/^\d+$/.test(exp)) { var node = all[exp]; if (node) collector.result.push(node); return } else if (/^[\w$][\w\d$]*$/.test(exp)) exp = "o.getAttribute('" + exp + "')!=undefined"; var option = eFunsCache[exp]; if (option == null) { var fun, match = exp.match(utils.expressionInnerReg); if (match != null) { var operator = match[2]; if (operator && (fun = nsSelector.Selectors.operators[operator])) { var left = match[1].replace(utils.trimQuotationReg, ""); utils.propMap[left] && (left = utils.propMap[left]); var right = match[3]; try { right = eval(right) } catch (e) { } } } if (!fly.isFun(fun)) fun = fly.toFun(fun || (exp.indexOf("=>") > -1 ? exp : "o=>with(o){ return " + exp + "}")); option = eFunsCache[exp] = { fun: fun, left: left, right: right} } var result = new Array(), i = -1, len = all.length, current; while (++i < len) if (option.fun(current = all[i], option.left, option.right, i, all)) collector.result.push(current) }, filter: function (A, _, $) { var C = $.selector.replace(/\(.*/, ""), B; if (C && (B = nsSelector.Selectors.filters[C]) != null) B(A, _, $); else throw new Error("\u4e0d\u652f\u6301\u8fc7\u6ee4\u5668\u201c" + $.selectorStr + "\u201d") }, children: function (B, _, $) { var A = $.selectorStr, C = parseInt($.selector); function D(A, $) { var B = ui.DomHelper.children(A); if ($ == C) _.merge(B); else for (var E = 0; E < B.length; E++) D(B[E], $ + 1) } for (var E = 0; E < B.length; E++) D(B[E], 1) }, sibling: function (B, _, $) { var A = $.selectorStr; for (var C = 0; C < B.length; C++) _.merge(ui.DomHelper.children(B[C].parentNode)) }, getCommonRelationFun: function ($) { return function (C, A, _) { var B = _.selectorStr, D = parseInt(_.selector); function E(B, _) { var C = B[$]; if (C == null) return; if (C.nodeType != 1) E(C, _); else if (_ == D) A.result.push(C); else E(C, _ + 1) } for (var F = 0; F < C.length; F++) E(C[F], 1) } } }; nsSelector.Selectors = { executors: executors, sTypes: new Array, splitRegFormat: "\\s*([{0}]+| |[\u03b1]|[><+\\&~]+)\\s*", splitReg: /\s*( )\s*/g, needFollows: {}, operators: { "!=": utils.getSimpleOperator("!="), "^=": fly.toFun("o,left, right=>var v = o[left] ; return v && v.substr(0, right.length) == right"), "$=": fly.toFun("o,left, right=>var v = o[left] ; return v && v.substr(v.length - (right.length)) == right"), "*=": fly.toFun("o, left, right=>var v = o[left] ;return v && v.indexOf(right) > -1"), "=": utils.getSimpleOperator("=="), "==": utils.getSimpleOperator("=="), ">": utils.getSimpleOperator(">"), "<": utils.getSimpleOperator("<"), ">=": utils.getSimpleOperator(">="), "<=": utils.getSimpleOperator("<=") }, filters: { empty: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].firstChild==null)cr.result.push(c[i])"), parent: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].firstChild!=null)cr.result.push(c[i])"), enabled: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].disabled!=true)cr.result.push(c[i])"), disabled: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].disabled==true)cr.result.push(c[i])"), undisplay: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(!dh.isIsDisplay(c[i]))cr.result.push(c[i])"), display: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.isIsDisplay(c[i]))cr.result.push(c[i])"), unvisible: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(!dh.isVisible(c[i]))cr.result.push(c[i])"), visible: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.isVisible(c[i]))cr.result.push(c[i])"), hidden: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.isHidden(c[i]))cr.result.push(c[i])"), first: utils.getCommonFilter("c,cr,s=>if(c[0]!=null){cr.result.push(c[0]) ;return true}"), last: utils.getCommonFilter("c,cr,s=>if(c[c.length-1]!=null){cr.result.push(c[c.length-1]);return true}", true), even: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(i%2===0)cr.result.push(c[i])"), odd: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(i%2!==0)cr.result.push(c[i])"), "eq()": utils.getCommonFilter("c,cr,s=>var o=c[s.follow.selector]; if(o)cr.result.push(o)"), "gt()": utils.getCommonFilter("c,cr,s=>for(var i = parseInt(s.follow.selector)+1; i < c.length; i ++ )cr.result.push(c[i])"), "lt()": utils.getCommonFilter("c,cr,s=>for(var i = 0,end=Math.min(parseInt(s.follow.selector),c.length); i < end; i ++ )cr.result.push(c[i])"), "not()": function (C, _, $) { $.follow.onlyFilterContext = $.onlyFilterContext; var B = new nsSelector.Collector(); $.follow.find(C, B); var A = ","; fly.each(B.result, function ($) { A += ui.DomHelper.getUniqueID($) + "," }); utils.getCommonFilter(function (B, $, _) { for (var C = 0; C < B.length; C++) if (A.indexOf("," + ui.DomHelper.getUniqueID(B[C]) + ",") < 0) $.result.push(B[C]) })(C, _, $) }, "has()": function (B, _, $) { var C = new nsSelector.Collector(); executors.children(B, C, { selector: 1 }); $.follow.onlyFilterContext = $.onlyFilterContext; var A = new nsSelector.Collector(); $.follow.find(C.result, A); executors.parentNode(A.result, _, { selector: 1 }) }, "data()": utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(fly.data(c[i],s.follow.selector)) cr.result.push(c[i])"), header: utils.getByTagPropFilter(utils.headerTags), input: utils.getByTagPropFilter(utils.inputTags), checked: utils.getByTagPropFilter("input", "checked", true), unchecked: utils.getByTagPropFilter("input", "checked", false), selected: utils.getByTagPropFilter("option", "selected", true), unselected: utils.getByTagPropFilter("option", "selected", false), focusable: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.focusable(c[i]))cr.result.push(c[i])"), tabbable: utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(dh.tabbable(c[i]))cr.result.push(c[i])") }, extendSelector: function (_) { for (var $ in _) this.executors[$] = _[$], this.sTypes.push($); var A = this.sTypes.join("").replace(/\s/g, "").replace(utils.relationSelectorRegReplace, "").replace("\u03b1", ""); this.splitReg = new RegExp(this.splitRegFormat.$format(A), "g") }, extendFilter: function (A) { fly.extendIf(this.filters, A); for (var _ in this.filters) if (_.substr(_.length - 2) == "()") { var $ = _.substr(0, _.length - 2); this.filters[$] = this.filters[_]; delete this.filters[_]; this.needFollows[":" + $] = this.needFollows[" :" + $] = true } }, extendOperator: function ($) { fly.extend(this.operators, $) } }; with (executors) { nsSelector.Selectors.extendSelector({ "*": all, "#": byId, ".": byCss, $: byName, "\u03b1": expression, " ": byTagName, ">": children, "<": getCommonRelationFun("parentNode"), "+": getCommonRelationFun("nextSibling"), "&": getCommonRelationFun("previousSibling"), "~": sibling, ":": filter, "\u03b8": fly.emptyFun }) } var inputFilters = {}, ti = -1, iType; while (iType = utils.inputTypes[++ti]) inputFilters[iType] = utils.getCommonFilter("c,cr,s=>for(var i = 0; i < c.length; i ++ )if(c[i].type==='" + iType + "')cr.result.push(c[i])"); nsSelector.Selectors.extendFilter(inputFilters); nsSelector.Engine = engine = function ($, _) { this.parent = _; if (_) this.root = _.root, this.onlyFilterContext = _.onlyFilterContext; else this.root = this; this.init($) } .extend({ isSimple: true, onlyFilterContext: false, init: function ($) { if (fly.isString($)) { this.selectorStr = this.selector = $; this.setIsSimple(this.onlyFilterContext == false && engine.isSimple(this.selectorStr)); if (!this.isSimple) { if (this.selector.indexOf(":") > -1) if (this.selector.indexOf(":contains(") > -1) this.selector = this.selector.replace(utils.containsReg, function (_, $) { return '[innerText*="' + $ + '"]' }); if (!this.parent) this.extractExpression().extractGroups(); this.parse() } } else { for (var _ in $) this[_] = $[_]; if (this.type == "\u03b1") this.selector = this.selectorStr = this.root.expressions[this.selector]; else if (this.type == "\u03b8") return this.init(this.root.groups[this.selector]); if (this.follow) this.follow = new nsSelector.Engine(this.follow, this); this.setIsSimple(this.onlyFilterContext == false && engine.isSimple(this.selectorStr)); if (!this.isSimple) this.achieve = executors[this.type] } }, setIsSimple: function ($) { this.isSimple = $ }, isVerySimple: function () { if (this.verySimple != undefined) return this.verySimple; if ((this.sequence && this.sequence.length > 0) || (this.childs && this.childs.length > 0)) return this.verySimple = false; if (this.verySimple = !utils.verySimpleReg.test(this.selector)) { this.parse(); this.achieve = executors[this.type] } return this.verySimple }, extractExpression: function ($) { var _ = this.expressions = new Array; this.selector = this.selector.replace(utils.expressionOuterReg, function (A, $) { _.push($); return (A.indexOf("[") > 0 ? " \u03b1" : "\u03b1") + (_.length - 1) }); return this }, extractGroups: function () { var $ = this.groups = new Array; this.selector = this.selector.replace(/\(([^\)]+)\)/g, function (A, _) { $.push(_.$trim()); return "\u03b8" + ($.length - 1) }); return this }, makeChilds: function () { this.childs = new Array; var $ = this.selector.split(","); for (var _ = 0; _ < $.length; _++) if ($[_] != "") this.childs.push(new engine($[_], this)) }, makePath: function () { var C = new Array, B; if (B = utils.relationSelectorReg.test(this.selector)) this.selector = this.selector.replace(utils.relationSelectorRegReplace, function (_, $, A) { return $.charAt(0) + (A == "" ? $.length : parseInt(A) + $.length - 1) + " " }); this.selector = this.selector.$trim(); var A = (" " + this.selector).replace(nsSelector.Selectors.splitReg, function (_, $) { C.push({ selectorStr: _, onlyFilterContext: !/^\s/.test(_), type: $ }); return "\u03be" }); C[0].onlyFilterContext = this.onlyFilterContext; var _ = A.substr(1).split("\u03be"); for (var E = 0; E < _.length; E++) { var $ = C[E]; $.selectorStr += ($.selector = _[E]); if (B && C.length > E + 1 && utils.relationSelectorReg.test($.type)) C[E + 1].onlyFilterContext = true; else if ($.type == "\u03b8" && E > 0 && $.onlyFilterContext) { var D = C[E - 1]; if (nsSelector.Selectors.needFollows[D.selectorStr] == true && D.follow == null) { D.follow = $; C.splice(E, 1); _.splice(E, 1); E-- } } } if (C.length == 1) this.init(C[0]), C = null; else for (E = 0; E < C.length; E++) C[E] = new engine(C[E], this); this.sequence = C; return this }, parse: function ($) { return this.selector.indexOf(",") > -1 ? this.makeChilds() : this.makePath() }, findChilds: function () { var _ = ""; for (var B = 0; B < this.childs.length; B++) { var $ = this.childs[B]; if (hasQueryMethod && $.isSimple && this.context.isDom != false) _ += "," + $.selectorStr; else { var A = new nsSelector.Collector(); $.find(this.context, A); this.collector.merge(A.result) } } if (_ != "") { A = new nsSelector.Collector(); engine.queryByProtogenic(this.context, A, _.substr(1)); this.collector.merge(A.result) } }, isChilds: function ($) { for (var _ = 0; _ < this.childs.length; _++) if (this.childs[_].is($, this.context)) return true; return false }, findPath: function () { var B = "", C = new nsSelector.Collector(), A = this.context; function $() { if (B != "") { engine.queryByProtogenic(A, C, B.substr(1)); A = C.result; C.clear(); B = "" } } for (var D = 0; D < this.sequence.length; D++) { var _ = this.sequence[D]; if (hasQueryMethod && _.isSimple && this.context.isDom != false) B += (this.onlyFilterContext ? "" : " ") + _.selectorStr; else { $(); _.find(A, C); A = C.result; C.clear() } } $(); this.collector.merge(A) }, isPath: function (B) { var A = B; for (var C = this.sequence.length - 1; C > -1; C--) { var _ = this.sequence[C]; while (true) { if (A == null || A.nodeType !== 1) return false; var $ = _.is(A, this.context); if (!$) { if (A == B) return false; else A = A.parentNode } else { A = A.parentNode; break } } } return true }, find: function (_, $) { if (this.selectorStr == "") return; this.context = _; this.collector = $; if (this.isSimple && _.isDom != false) engine.queryByProtogenic(_, $, this.selectorStr); else if (this.childs != null && this.childs.length > 0) this.findChilds(); else if (this.sequence != null && this.sequence.length > 0) this.findPath(); else this.achieve(_, $, this) }, filter: function (B, A, $) { for (var C = 0; C < B.length; C++) { var _ = B[C]; if (this.is(_, A)) $.push(_) } }, is: function (B, D) { this.context = D; if (this.childs != null && this.childs.length > 0) return this.isChilds(B); else if (this.sequence != null && this.sequence.length > 0) return this.isPath(B); else if (this.isSimple && this.isVerySimple() == false) { var $ = B.id, C = B.id = "fly_" + Math.random(), E = this.selectorStr + "[id='" + C + "']"; D = D || [doc]; for (var F = 0; F < D.length; F++) if (D[F].querySelector(E)) return true; B.id = $; return false } else { var A = [{ all: [B]}]; A.isDom = false; var _ = new nsSelector.Collector(); this.achieve(A, _, this); return _.result.length > 0 } } }).extend(nsSelector.Engine); engine.utils = utils; engine.isSimple = function ($) { try { return hasQueryMethod && checkDiv.querySelector($) != false } catch (_) { return false } }; engine.queryByProtogenic = function (A, _, $) { for (var B = 0; B < A.length; B++) _.merge(A[B].querySelectorAll($)); return _.result }; engine.cache = {}; engine.create = function ($) { return engine.cache[$] || (engine.cache[$] = new engine($)) }; nsSelector.DomQuery = function (_, $) { this.context = _; this.selectors = $ } .extend({ createResult: function ($, _) { $.context = _; $.isDomArray = true; return $ }, extractSelectorStr: function () { var $ = this.selectorStr = ""; for (var _ = 0; _ < this.selectors.length; _++) { if (fly.isFun($ = this.selectors[_])) fly.onLoad($); if ($ == null) continue; if (!fly.isString($)) this.collector.push($); else if (fly.isHtml($)) this.collector.merge(dh.create($)); else this.selectorStr += (this.selectorStr == "" ? "" : ",") + $.replace(utils.trimCommaReg, "") } return this }, find: function () { if (this.selectors.length == 1 && this.selectors[0] && this.selectors[0].$isIList == true) return this.selectors[0]; this.collector = new nsSelector.Collector(); this.extractSelectorStr(); if (/^\s*$/g.test(this.selectorStr) == false) { this.selector = engine.create(this.selectorStr); this.selector.find(this.context || [doc], this.collector) } this.collector.uniquelize(); return this.createResult(this.collector.result, this.context) }, filter: function (_) { this.extractSelectorStr(); this.selector = engine.create(this.selectorStr); var $ = new nsSelector.Collector(); this.selector.filter(_, _.context, $); return this.createResult($.result, this.context) }, is: function ($) { this.extractSelectorStr(); this.selector = engine.create(this.selectorStr); for (var _ = 0; _ < $.length; _++) if (this.selector.is($[_], $.context)) return true; return false }, closest: function (C) { var B = C.context, $ = new nsSelector.Collector(); this.extractSelectorStr(); var A = new nsSelector.Collector(null, true); if (this.selectors.length == 0) return C; this.selector = engine.create(this.selectorStr); for (var D = 0; D < C.length; D++) { var _ = C[D]; while (_ && _.nodeType === 1 && A.push(_)) if (this.selector.is(_, B)) { $.push(_); break } else _ = _.parentNode } A = null; return this.createResult($.result, B) }, parent: function (C) { var B = C.context, $ = new nsSelector.Collector(); this.extractSelectorStr(); var A = new nsSelector.Collector(null, true); this.selector = this.selectors.length == 0 ? null : engine.create(this.selectorStr); for (var D = 0; D < C.length; D++) { var _ = C[D].parentNode; if (_ && _.nodeType === 1 && A.push(_) && (!this.selector || this.selector.is(_, B))) $.push(_) } A = null; return this.createResult($.result, B) }, parents: function (C) { var B = C.context, $ = new nsSelector.Collector(); this.extractSelectorStr(); var A = new nsSelector.Collector(null, true); this.selector = this.selectors.length == 0 ? null : engine.create(this.selectorStr); for (var D = 0; D < C.length; D++) { var _ = C[D]; while ((_ = _.parentNode) && _.nodeType === 1 && A.push(_)) if (this.selector == null || this.selector.is(_, B)) $.push(_) } A = null; return this.createResult($.result, B) } }).extend(nsSelector.DomQuery); function extendSelectorMethod($) { $ = fly.isString(this) ? this : $; qp.extend($, function (_) { var A = new fly.ui.selector.DomQuery(this.context, arguments); return A[$](this) }) } fly.each(["filter", "is", "closest", "parent", "parents"], extendSelectorMethod); qp.extend("$", fly); qp.extend("find", fly) })(); fly.__onLoad(); fly.doc = fly(docE); fly.getBody = function () { if (fly.body) return fly.body; if (!doc.body) return null; return fly.body = fly(doc.body) } }; $$contexts.$(this)